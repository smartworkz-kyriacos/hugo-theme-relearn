[
  {
    "content": "Discover what this Hugo theme is all about and the core-concepts behind it.\n",
    "description": "",
    "tags": null,
    "title": "Basics",
    "uri": "/hugo-theme-relearn/basics/"
  },
  {
    "content": "This is a plain demo child page.\n",
    "description": "This is a plain page test, and the beginning of a YAML multiline description...\n",
    "tags": null,
    "title": "page X",
    "uri": "/hugo-theme-relearn/shortcodes/children/test/"
  },
  {
    "content": "In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.\nFolders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md \u003c-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.md \u003c-- /level-one/level-two/level-three/level-four/page-4-a │ │ │ │ ├── page-4-b.md \u003c-- /level-one/level-two/level-three/level-four/page-4-b │ │ │ │ └── page-4-c.md \u003c-- /level-one/level-two/level-three/level-four/page-4-c │ │ │ ├── _index.md \u003c-- /level-one/level-two/level-three │ │ │ ├── page-3-a.md \u003c-- /level-one/level-two/level-three/page-3-a │ │ │ ├── page-3-b.md \u003c-- /level-one/level-two/level-three/page-3-b │ │ │ └── page-3-c.md \u003c-- /level-one/level-two/level-three/page-3-c │ │ ├── _index.md \u003c-- /level-one/level-two │ │ ├── page-2-a.md \u003c-- /level-one/level-two/page-2-a │ │ ├── page-2-b.md \u003c-- /level-one/level-two/page-2-b │ │ └── page-2-c.md \u003c-- /level-one/level-two/page-2-c │ ├── _index.md \u003c-- /level-one │ ├── page-1-a.md \u003c-- /level-one/page-1-a │ ├── page-1-b.md \u003c-- /level-one/page-1-b │ └── page-1-c.md \u003c-- /level-one/page-1-c ├── _index.md \u003c-- / └── page-top.md \u003c-- /page-top Note _index.md is required in each folder, it’s your “folder home page”\nCreate your project The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you to train by following great documentation for beginners.\nHugo provides a new command to create a new website.\nhugo new site \u003cnew_project\u003e The Relearn theme provides archetypes to help you create this kind of pages.\nFrontmatter Configuration Each Hugo page has to define a frontmatter in toml, yaml or json. This site will use toml in all cases.\nThe Relearn theme uses the following parameters on top of Hugo ones:\n+++ # Table of contents (toc) is enabled by default. Set this parameter to true to disable it. # Note: Toc is always disabled for chapter pages disableToc = false # If set, this will be used for the page's menu entry (instead of the `title` attribute) menuTitle = \"\" # If set, this will explicitly override common rules for the expand state of a page's menu entry alwaysopen = true # If set, this will explicitly override common rules for the sorting order of a page's submenu entries ordersectionsby = \"title\" # The title of the page heading will be prefixed by this HTML content headingPre = \"\" # The title of the page heading will be postfixed by this HTML content headingPost = \"\" # The title of the page in menu will be prefixed by this HTML content menuPre = \"\" # The title of the page in menu will be postfixed by this HTML content menuPost = \"\" # Hide a menu entry by setting this to true hidden = false # Display name of this page modifier. If set, it will be displayed in the footer. LastModifierDisplayName = \"\" # Email of this page modifier. If set with LastModifierDisplayName, it will be displayed in the footer LastModifierEmail = \"\" +++ Add icon to a menu entry In the page frontmatter, add a menuPre param to insert any HTML code before the menu label. The example below uses the GitHub icon.\n+++ title = \"GitHub repo\" menuPre = \"\u003ci class='fab fa-github'\u003e\u003c/i\u003e \" +++ Ordering sibling menu/page entries Hugo provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n+++ title = \"My page\" weight = 5 +++ Using a custom title for menu entries By default, the Relearn theme will use a page’s title attribute for the menu item (or linkTitle if defined).\nBut a page’s title has to be descriptive on its own while the menu is a hierarchy. We’ve added the menuTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n+++ title = \"Install on Linux\" menuTitle = \"Linux\" +++ Override expand state rules for menu entries You can change how the theme expands menu entries on the side of the content with the alwaysopen setting on a per page basis. If alwaysopen=false for any given entry, its children will not be shown in the menu as long as it is not necessary for the sake of navigation.\nThe theme generates the menu based on the following rules:\nall parent entries of the active page including their siblings are shown regardless of any settings immediate children entries of the active page are shown regardless of any settings if not overridden, all other first level entries behave like they would have been given alwaysopen=false if not overridden, all other entries of levels besides the first behave like they would have been given alwaysopen=true all visible entries show their immediate children entries if alwaysopen=true; this proceeds recursivley all remaining entries are not shown You can see this feature in action on the example page for children shortcode and its children pages.\n",
    "description": "",
    "tags": null,
    "title": "Pages organization",
    "uri": "/hugo-theme-relearn/cont/pages/"
  },
  {
    "content": "Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes. These are preconfigured skeleton pages with default frontmatter.\nThe Relearn theme defines some few archetypes of pages but you are free to define new ones to your liking. All can be used at any level of the documentation, the only difference being the layout of the content.\nPredefined Archetypes Home A Home page is the starting page of your project. It’s best to have only one page of this kind in your project.\nTo create a home page, run the following command\nhugo new --kind home _index.md This leads to a file with the following content\n+++ archetype = \"home\" title = \"{{ replace .Name \"-\" \" \" | title }}\" +++ Lorem Ipsum. Chapter A Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found below it.\nTo create a chapter page, run the following command\nhugo new --kind chapter \u003cname\u003e/_index.md This leads to a file with the following content\n+++ archetype = \"chapter\" title = \"{{ replace .Name \"-\" \" \" | title }}\" weight = X +++ Lorem Ipsum. Replace the X with a number. Because this number will be used to generate the subtitle of the chapter page, set the number to a consecutive value starting at 1 for each new chapter level.\nDefault A Default page is any other content page. If you set an unknown archetype in your frontmatter, this archetype will be used to generate the page.\nTo create a default page, run either one of the following commands\nhugo new \u003cchapter\u003e/\u003cname\u003e/_index.md or\nhugo new \u003cchapter\u003e/\u003cname\u003e.md This leads to a file with the following content\n+++ title = \"{{ replace .Name \"-\" \" \" | title }}\" weight = X +++ Lorem Ipsum. Replace the X with a number or delete the whole weight parameter entirly.\nSelfdefined Archetypes If you are in need of further archetypes you can define your own or even redefine existing ones.\nTemplate Define a template file in your project at archetypes/\u003ckind\u003e.md and make sure it has at least the frontmatter parameter for that archetype like\n+++ archetype = \"\u003ckind\u003e\" +++ Afterwards you can generate new content files of that kind with the follwing command\nhugo new --kind \u003ckind\u003e \u003cname\u003e/_index.md Partials To define how your archetypes are rendered, define corresponding partial files in your projects directory layouts/partials/archetypes/\u003ckind\u003e.\nIf you use an unknown archetype in your frontmatter, the default archetype will be used to generate the page.\nRelated to each archetype, several hook partial files in the form of \u003chook\u003e.html can be given inside each archetype directory. If a partial for a specific hook is missing, no output is generated for this hook.\nThe following hooks are used:\nName Notes styleclass Defines a set of CSS classes to be added to the HTML’s \u003cmain\u003e element. You can use these classes to define own CSS rules in your custom-header.html article Defines the HTML how to render your content Take a look at the existing archetypes of this theme to get an idea how to utilize it.\nOutput formats Each hook file can be overridden of a specific output format. Eg. if you define a new output format PLAINTEXT in your config.toml, you can add a file layouts/partials/archetypes/default.plaintext.html to change the way how normal content is written for that output format.\n",
    "description": "",
    "tags": null,
    "title": "Archetypes",
    "uri": "/hugo-theme-relearn/cont/archetypes/"
  },
  {
    "content": "Find out how to create and organize your content quickly and intuitively.\n",
    "description": "",
    "tags": null,
    "title": "Content",
    "uri": "/hugo-theme-relearn/cont/"
  },
  {
    "content": "This document shows you what’s new in the latest release. For a detailed list of changes, see the history page.\nBreaking: A change that requires action by you after upgrading to assure the site is still functional.\nChange: A change in default behavior. This may requires action by you / may or may not be revertable by configuration.\nNew: Marks new behavior you might find interesting or comes configurable.\n5.3.0 Change: In the effort to comply with WCAG standards, the implementation of the collapsible menu was changed. Although the functionality of the new implementation works with old browsers (Internet Explorer 11), the display of the expander icons does not and is limited to modern browsers.\nNew: Image formatting has two new classes to align images to the left or right. Additionally, the already existing inline option is now documented.\nNew: Printing for the swagger shortcode was optimized to expand sections that are usually closed in interactive mode. This requires print support to be configured.\n5.2.0 Change: If you’ve set collapsibleMenu = true in your config.toml, the menu will be expanded if a search term is found in a collapsed submenu. The menu will return to its initial collapse state once the search term does not match any submenus. 5.1.0 Change: Because the print preview URLs were non deterministic for normal pages in comparison to page bundles, this is now changed. Each print preview is now accessible by adding a index.print.html to the default URL.\nYou can revert this behavior by overwriting the PRINT output format setting in your config.tomlto:\n[outputFormats] [outputFormats.PRINT] name= \"PRINT\" baseName = \"index\" path = \"_print\" isHTML = true mediaType = 'text/html' permalinkable = false 5.0.0 Breaking: The theme changed how JavaScript and CSS dependencies are loaded to provide a better performance. In case you’ve added own JavaScript code that depends on the themes jQuery implementation, you have to put it into a separate *.js file (if not already) and add the defer keyword to the script element. Eg.\n\u003cscript defer src=\"myscript.js\"\u003e\u003c/script\u003e Change: The way archetypes are used to generate output has changed. The new systems allows you, to redefine existing archetypes or even generate your own ones.\nYour existing markdown files will still work like before and therefore you don’t need to change anything after the upgrade. Nevertheless, it is recommended to adapt your existing markdown files to the new way as follows:\nfor your home page, add the frontmatter parameter archetype = \"home\" and remove the leading heading\nfor all files containing the deprecated frontmatter parameter chapter = true, replace it with archetype = \"chapter\" and remove the leading headings\nChange: The frontmatter options pre / post were renamed to menuPre / menuPost. The old options will still be used if the new options aren’t set. Therefore you don’t need to change anything after the upgrade.\nNew: Adding new partials heading-pre.html / heading-post.html and according frontmatter options headingPre / headingPost to modifiy the way your page`s main heading gets styled.\nNew: The new shortcode math is available to add beautiful math and chemical formulae. See the documentation for available features. This feature will not work with Internet Explorer 11.\n4.2.0 Breaking: The second parameter for the include shortcode was switched in meaning and was renamed from showfirstheading to hidefirstheading. If you haven’t used this parameter in your shortcode, the default behavior hasn’t changed and you don’t need to change anything.\nIf you’ve used the second boolean parameter, you have to rename it and invert its value to achive the same behavior.\nChange: Previously, if the tabs shortcode could not find a tab item because, the tabs ended up empty. Now the first tab is selected instead.\nChange: The landingPageURL was removed from config.toml. You can savely remove this aswell from your configuration as it is not used anymore. The theme will detect the landing page URL automatically.\nNew: All shortcodes can now be also called from your partials. Examples for this are added to the documentation of each shortcode.\n4.1.0 New: While fixing issues with the search functionality for non latin languages, you can now configure to have multiple languages on a single page. 4.0.0 Breaking: The custom_css config parameter was removed from the configuration. If used in an existing installation, it can be achieved by overriding the custom-header.html template in a much more generic manner.\nBreaking: Because anchor hover color was not configurable without introducing more complexitity to the variant stylesheets, we decided to remove --MAIN-ANCHOR-color instead. You don’t need to change anything in your custom color stylesheet as the anchors now get their colors from --MAIN-LINK-color and --MAIN-ANCHOR-HOVER-color respectivley.\nNew: All shortcodes now support named parameter. The positional parameter are still supported but will not be enhanced with new features, so you don’t need to change anything in your installation.\nThis applies to expand, include, notice and siteparam.\nNew: The button shortcode received some love and now has a parameter for the color style similar to other shortcodes.\nNew: New colors --PRIMARY-color and --SECONDARY-color were added to provide easier modification of your custom style. Shortcodes with a color style can now have primary or secondary as additional values.\nThese two colors are the default for other, more specific color variables. You don’t need to change anything in your existing custom color stylesheets as those variables get reasonable default values.\nNew: The documentation for all shortcodes were revised.\n3.4.0 Breaking: If you had previously overwritten the custom-footer.html partial to add visual elements below the content of your page, you have to move this content to the new partial content-footer.html. custom-footer.html was never meant to contain HTML other than additional styles and JavaScript.\nNew: If you prefer expandable/collapsible menu items, you can now set collapsibleMenu=true in your config.toml. This will add arrows to all menu items that contain sub menus. The menu will expand/collapse without navigation if you click on an arrow.\nNew: You can activate print support in your config.toml to add the capability to print whole chapters or even the complete site.\nNew: Translation for Traditional Chinese.\n3.3.0 New: Introduction of new CSS variables to set the font. The theme distinguishs between --MAIN-font for all content text and --CODE-font for inline or block code. There are additional overrides for all headings. See the theme variant generator of the exampleSite for all available variables.\nNew: The new shortcode swagger is available to include a UI for REST OpenAPI Specifications. See the documentation for available features. This feature will not work with Internet Explorer 11.\n3.2.0 Change: In this release the Mermaid JavaScript library will only be loaded on demand if the page contains a Mermaid shortcode or is using Mermaid codefences. This changes the behavior of disableMermaid config option as follows: If a Mermaid shortcode or codefence is found, the option will be ignored and Mermaid will be loaded regardlessly.\nThe option is still useful in case you are using scripting to set up your graph. In this case no shortcode or codefence is involved and the library is not loaded by default. In this case you can set disableMermaid=false in your frontmatter to force the library to be loaded. See the theme variant generator of the exampleSite for an example.\nThis change requires at least Hugo 0.93.0 to be used. The minimum requirement will be reported during build on the console if not met.\nNew: Additional color variant variable --MERMAID-theme to set the variant’s Mermaid theme. This causes the Mermaid theme to switch with the color variant if it defers from the setting of the formerly selected color variant.\n3.1.0 New: attachment and notice shortcodes have a new parameter to override the default icon. Allowed values are all Font Awesome 5 Free icons. 3.0.0 Breaking: We made changes to the menu footer. If you have your menu-footer.html partial overridden, you may have to review the styling (eg. margins/paddings) in your partial. For a reference take a look into the menu-footer.html partial that is coming with the exampleSite.\nThis change was made to allow your own menu footer to be placed right after the so called prefooter that comes with the theme (containing the language switch and Clear history functionality).\nBreaking: We have changed the default colors from the original Learn theme (the purple menu header) to the Relearn defaults (the light green menu header) as used in the official documentation.\nThis change will only affect your installation if you’ve not set the themeVariant parameter in your config.toml. If you still want to use the Learn color variant, you have to explicitly set themeVariant=\"learn\" in your config.toml.\nNote, that this will also affect your site if viewed with Internet Explorer 11 but in this case it can not be reconfigured as Internet Explorer does not support CSS variables.\nChange: Due to a bug, that we couldn’t fix in a general manner for color variants, we decided to remove --MENU-SEARCH-BOX-ICONS-color and introduced --MENU-SEARCH-color instead. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nChange: For consistency reasons, we renamed --MENU-SEARCH-BOX-color to --MENU-SEARCH-BORDER-color. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nNew: With this release you are now capable to define your own dark mode variants.\nTo make this possible, we have introduced a lot more color variables you can use in your color variants. Your old variants will still work and don’t need to be changed as apropriate fallback values are used by the theme. Nevertheless, the new colors allow for much more customization.\nTo see what’s now possible, see the new variants relearn-dark and neon that are coming with this release.\nNew: To make the creation of new variants easier for you, we’ve added a new interactive theme variant generator. This feature will not work with Internet Explorer 11.\nNew: You can now configure multiple color variants in your config.toml. In this case, the first variant is the default chosen on first view and a variant switch will be shown in the menu footer. See the documentation for configuration.\nNote, that the new variant switch will not work with Internet Explorer 11 as it does not support CSS variables. Therefore, the variant switcher will not be displayed with Internet Explorer 11.\n2.9.0 Breaking: This release removes the themes implementation of ref/relref in favor for Hugos standard implementation. This is because of inconsistencies with the themes implementation. In advantage, your project becomes standard complient and exchanging this theme in your project to some other theme will be effortless.\nIn a standard complient form you must not link to the *.md file but to its logical name. You’ll see, referencing other pages becomes much easier. All three types result in the same reference:\nType Non-Standard Standard Branch bundle basics/configuration/_index.md basics/configuration Leaf bundle basics/configuration/index.md basics/configuration Page basics/configuration.md basics/configuration If you’ve linked from a page of one language to a page of another language, conversion is a bit more difficult but Hugo got you covered as well.\nAlso, the old themes implementation allowed refs to non-existing content. This will cause Hugos implementation to show the error below and abort the generation. If your project relies on this old behavior, you can reconfigure the error handling of Hugos implementation.\nIn the best case your usage of the old implementation is already standard complient and you don’t need to change anything. You’ll notice this very easily once you’ve started hugo server after an upgrade and no errors are written to the console.\nYou may see errors on the console after the update in the form:\nERROR 2021/11/19 22:29:10 [en] REF_NOT_FOUND: Ref \"basics/configuration/_index.md\": \"hugo-theme-relearn\\exampleSite\\content\\_index.en.md:19:22\": page not found In this case, you must apply one of two options:\nCopy the old implementation files theme/hugo-theme-relearn/layouts/shortcode/ref.html and theme/hugo-theme-relearn/layouts/shortcode/relref.html to your own projects layouts/shortcode/ref.html and layouts/shortcode/relref.html respectively. This is not recommended as your project will still rely on non-standard behavior afterwards.\nStart up a text editor with regular expression support for search and replace. Apply the following conversions in the given order on all *.md files. This is the recommended choice.\nType Search Replace by Branch bundle (ref\\s+\"[^\"]*)/_index\\.md\" $1\" Leaf bundle (ref\\s+\"[^\"]*)/index\\.md\" $1\" Page (ref\\s+\"[^\"]*)\\.md\" $1\" 2.8.0 Change: Although never officially documented, this release removes the font Novacento/Novecento. If you use it in an overwritten CSS please replace it with Work Sans. This change was necessary as Novacento did not provide all Latin special characters and lead to mixed styled character text eg. for czech.\nNew: The theme now supports favicons served from static/images/ named as favicon or logo in SVG, PNG or ICO format out of the box. An overridden partial layouts/partials/favicon.html may not be necessary anymore in most cases.\nNew: You can hide the table of contents menu for the whole site by setting the disableToc option in your config.toml. For an example see the example configuration.\n2.7.0 New: Optional second parameter for notice shortcode to set title in box header. 2.6.0 New: Your site can now be served from a subfolder if you set baseURL and canonifyURLs=true in your config.toml. See the documentation for a detailed example. 2.5.0 Change: New colors --CODE-BLOCK-color and --CODE-BLOCK-BG-color were added to provide a fallback for Hugos syntax highlightning in case guessSyntax=true is set. Ideally the colors are set to the same values as the ones from your chosen chroma style. 2.4.0 Change: Creation of customized stylesheets was simplified down to only contain the CSS variables. Everything else can and should be deleted from your custom stylesheet to assure everything works fine. For the predefined stylesheet variants, this change is already included.\nNew: Hidden pages are displayed by default in their according tags page. You can now turn off this behavior by setting disableTagHiddenPages=true in your config.toml.\nNew: You can define the expansion state of your menus for the whole site by setting the alwaysopen option in your config.toml. Please see further documentation for possible values and default behavior.\nNew: New frontmatter ordersectionsby option to change immediate children sorting in menu and children shortcode. Possible values are title or weight.\nNew: Alternate content of a page is now advertised in the HTML meta tags. See Hugo documentation.\n2.3.0 New: Showcase multilanguage features by provding a documentation translation “fer us pirrrates”. There will be no other translations besides the original English one and the Pirates one due to maintenance constraints. 2.2.0 New: Hidden pages are displayed by default in the sitemap generated by Hugo and are therefore visible for search engine indexing. You can now turn off this behavior by setting disableSeoHiddenPages=true in your config.toml. 2.1.0 Change: In case the site’s structure contains addional *.md files not part of the site (eg files that are meant to be included by site pages - see CHANGELOG.md in the exampleSite), they will now be ignored by the search.\nNew: Hidden pages are indexed for the site search by default. You can now turn off this behavior by setting disableSearchHiddenPages=true in your config.toml.\nNew: If a search term is found in an expand shortcode, the expand will be opened.\nNew: The menu will scroll the active item into view on load.\n2.0.0 Change: Syntaxhighlightning was switched to the built in Hugo mechanism. You may need to configure a new stylesheet or decide to roll you own as described on in the Hugo documentation\nChange: In the predefined stylesheets there was a typo and --MENU-HOME-LINK-HOVERED-color must be changed to --MENU-HOME-LINK-HOVER-color. You don’t need to change anything in your custom color stylesheet as the old name will be used as a fallback.\nChange: --MENU-HOME-LINK-color and --MENU-HOME-LINK-HOVER-color were missing in the documentation. You should add them to your custom stylesheets if you want to override the defaults.\nChange: Arrow navigation and children shortcode were ignoring setting for ordersectionsby. This is now changed and may result in different sorting order of your sub pages.\nChange: If hidden pages are accessed directly by typing their URL, they will be exposed in the menu.\nChange: A page without a title will be treated as hidden=true.\nNew: You can define the expansion state of your menus in the frontmatter. Please see further documentation for possible values and default behavior.\nNew: New partials for defining pre/post content for menu items and the content. See documentation for further reading.\nNew: Shortcode children with new parameter containerstyle.\nNew: New shortcode include to include arbitrary file content into a page.\n1.2.0 New: Shortcode expand with new parameter to open on page load. 1.1.0 New: Mermaid config options can be set in config.toml. 1.0.0 New: Initial fork of the Learn theme based on Learn 2.5.0 on 2021-07-01. This introduces no new features besides a global rename to Relearn and a new logo. For the reasons behind forking the Learn theme, see this comment in the Learn issues. ",
    "description": "",
    "tags": null,
    "title": "What's new",
    "uri": "/hugo-theme-relearn/basics/migration/"
  },
  {
    "content": "Let’s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\nMarkdown is simple to learn, with minimal extra characters so it’s also quicker to write content. Less chance of errors when writing in Markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this:\nThe overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. John Gruber\nWithout further delay, let us go over the main elements of Markdown and what the resulting HTML looks like:\nInfo Bookmark this page and the official Commonmark reference for easy future reference!\nHeadings Headings from h1 through h6 are constructed with a # for each level:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Renders to:\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading HTML:\n\u003ch1\u003eh1 Heading\u003c/h1\u003e \u003ch2\u003eh2 Heading\u003c/h2\u003e \u003ch3\u003eh3 Heading\u003c/h3\u003e \u003ch4\u003eh4 Heading\u003c/h4\u003e \u003ch5\u003eh5 Heading\u003c/h5\u003e \u003ch6\u003eh6 Heading\u003c/h6\u003e Comments Comments should be HTML compatible\n\u003c!-- This is a comment --\u003e Comment below should NOT be seen:\nHorizontal Rules The HTML \u003chr\u003e element is for creating a “thematic break” between paragraph-level elements. In Markdown, you can create a \u003chr\u003e with --- - three consecutive dashes\nrenders to:\nParagraphs Any text not starting with a special sign is written as normal, plain text and will be wrapped within \u003cp\u003e\u003c/p\u003e tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML:\n\u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e Text Markers Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text** renders to:\nrendered as bold text\nand this HTML\n\u003cstrong\u003erendered as bold text\u003c/strong\u003e Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n_rendered as italicized text_ renders to:\nrendered as italicized text\nand this HTML:\n\u003cem\u003erendered as italicized text\u003c/em\u003e Strikethrough In GFM (GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~ Which renders to:\nStrike through this text.\nHTML:\n\u003cdel\u003eStrike through this text.\u003c/del\u003e Blockquotes For quoting blocks of content from another source within your document.\nAdd \u003e before any text you want to quote.\n\u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. Renders to:\nFusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\nand this HTML:\n\u003cblockquote\u003e \u003cp\u003e\u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\u003c/p\u003e \u003c/blockquote\u003e Blockquotes can also be nested:\n\u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e \u003e \u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. \u003e \u003e Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus. Renders to:\nDonec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\nSed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\nMauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\nLists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bullet For example\n+ Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML\n\u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 4. Consectetur adipiscing elit 2. Integer molestie lorem at massa 8. Facilisis in pretium nisl aliquet 4. Nulla volutpat aliquam velit 99. Faucibus porta lacus fringilla vel 21. Aenean sit amet erat nunc 6. Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML:\n\u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e Tip If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Code Inline code Wrap inline snippets of code with `.\nIn this example, `\u003cdiv\u003e\u003c/div\u003e` should be wrapped as **code**. Renders to:\nIn this example, \u003cdiv\u003e\u003c/div\u003e should be wrapped as code.\nHTML:\n\u003cp\u003eIn this example, \u003ccode\u003e\u0026lt;div\u0026gt;\u0026lt;/div\u0026gt;\u003c/code\u003e should be wrapped as \u003cstrong\u003ecode\u003c/strong\u003e.\u003c/p\u003e Indented code Or indent several lines of code by at least two spaces, as in:\n// Some comments line 1 of code line 2 of code line 3 of code Renders to:\n// Some comments line 1 of code line 2 of code line 3 of code HTML:\n\u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e Block code “fences” Use “fences” ``` to block in multiple lines of code.\n``` Sample text here... ``` HTML:\n\u003cpre\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e Syntax highlighting GFM, or “GitHub Flavored Markdown” also supports syntax highlighting. To activate it, usually you simply add the file extension of the language you want to use directly after the first code “fence”, ```js, and syntax highlighting will automatically be applied in the rendered HTML.\nSee Code Highlighting for additional documentation.\nFor example, to apply syntax highlighting to JavaScript code:\n```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` Renders to:\ngrunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Renders to:\nOption Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. And this HTML:\n\u003ctable\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/table\u003e Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\n| Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Two tables adjacent Option Description ext extension to be used for dest files. Option Description ext extension to be used for dest files. Links Basic link [Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip):\nAssemble\nHTML:\n\u003ca href=\"http://assemble.io\"\u003eAssemble\u003c/a\u003e Add a tooltip [Upstage](https://github.com/upstage/ \"Visit Upstage!\") Renders to (hover over the link, there should be a tooltip):\nUpstage\nHTML:\n\u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n# Table of Contents - [Chapter 1](#chapter-1) - [Chapter 2](#chapter-2) - [Chapter 3](#chapter-3) will jump to these sections:\n## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. Note Note that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works.\nImages Images have a similar syntax to links but include a preceding exclamation mark:\n![Spock](https://octodex.github.com/images/spocktocat.png) Like links, images also have a footnote style syntax, resulting in a tooltip:\n![Picard](https://octodex.github.com/images/jean-luc-picat.jpg \"Jean Luc Picard\") Images can also be linked by reference ID to later define the URL location:\n![La Forge][laforge] [laforge]: https://octodex.github.com/images/trekkie.jpg \"Geordi La Forge\" Further image formatting The Hugo Markdown parser supports additional non-standard functionality.\nResizing image Add HTTP parameters width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![Minion](https://octodex.github.com/images/minion.png?width=20vw) ![Minion](https://octodex.github.com/images/minion.png?height=50px) ![Minion](https://octodex.github.com/images/minion.png?height=50px\u0026width=40vw) Add CSS classes Add a HTTP classes parameter to the link image to add CSS classes. Add some of the predefined values or even define your own in your CSS.\nshadow ![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=shadow) border ![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=border) left ![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=left) right ![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=right) inline ![Spidertocat](https://octodex.github.com/images/spidertocat.png?classes=inline) ![DrOctocat](https://octodex.github.com/images/droctocat.png?classes=inline) ![Supertocat](https://octodex.github.com/images/okal-eltocat.jpg?classes=inline) ![Riddlocat](https://octodex.github.com/images/riddlocat.jpg?classes=inline) Lightbox Add a HTTP featherlight parameter to the link image to disable lightbox. By default lightbox is enabled using the featherlight.js plugin. You can disable this by defining featherlight to false.\n![Homercat](https://octodex.github.com/images/homercat.png?featherlight=false) ",
    "description": "",
    "tags": null,
    "title": "Markdown syntax",
    "uri": "/hugo-theme-relearn/cont/markdown/"
  },
  {
    "content": "Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it’s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nThe Relearn theme provides multiple shortcodes on top of existing ones.\nAttachmentsList of files attached to a page\nButtonClickable buttons\nChildrenList the child pages of a page\nExpandExpandable/collapsible sections of text\nIncludeDisplays content from other files\nMathBeautiful math and chemical formulae\nMermaidGenerate diagrams and flowcharts from text\nNoticeDisclaimers to help you structure your page\nSite paramGet value of site params\nSwaggerUI for your Swagger / OpenAPI Specifications\nTabbed viewsShow content in tabbed views\n",
    "description": "",
    "tags": null,
    "title": "Shortcodes",
    "uri": "/hugo-theme-relearn/shortcodes/"
  },
  {
    "content": "The Relearn theme uses Hugo’s built-in syntax highlighting for code.\nMarkdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.\n```json [ { \"title\": \"apples\", \"count\": [12000, 20000], \"description\": {\"text\": \"...\", \"sensitive\": false} }, { \"title\": \"oranges\", \"count\": [17500, null], \"description\": {\"text\": \"...\", \"sensitive\": false} } ] ``` Renders to:\n[ { \"title\": \"apples\", \"count\": [12000, 20000], \"description\": {\"text\": \"...\", \"sensitive\": false} }, { \"title\": \"oranges\", \"count\": [17500, null], \"description\": {\"text\": \"...\", \"sensitive\": false} } ] Supported languages Hugo comes with a remarkable list of supported languages.\nRecommended configuration You can choose a color theme from the list of supported themes and add it in your config.toml\n[markup] [markup.highlight] # if set to `guessSyntax = true`, there will be no unstyled code even if no language # was given BUT mermaid code fences will not work anymore! So this is a mandatory # setting for your site guessSyntax = false # choose a color theme or create your own style = \"base16-snazzy\" ",
    "description": "",
    "tags": null,
    "title": "Code highlighting",
    "uri": "/hugo-theme-relearn/cont/syntaxhighlight/"
  },
  {
    "content": "Some pages for internal testing of differnt styles\nChaptersStart your success story. Now!\nCodeSome testing for different styles used in syntax highlightning and preformatted blocks\nImagesSome testing for different styles of image links\nWidthTest dynamic width resizing of content if scrollbar is present\n",
    "description": "",
    "tags": null,
    "title": "Tests",
    "uri": "/hugo-theme-relearn/tests/"
  },
  {
    "content": "You can define additional menu entries or shortcuts in the navigation menu without any link to content.\nBasic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.\nExample from the current website:\n[[menu.shortcuts]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub repo\" identifier = \"ds\" url = \"https://github.com/McShelby/hugo-theme-relearn\" weight = 10 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-camera'\u003e\u003c/i\u003e Showcases\" url = \"more/showcase/\" weight = 11 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation\" identifier = \"hugodoc\" url = \"https://gohugo.io/\" weight = 20 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bullhorn'\u003e\u003c/i\u003e Credits\" url = \"more/credits/\" weight = 30 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-tags'\u003e\u003c/i\u003e Tags\" url = \"tags/\" weight = 40 By default, shortcuts are preceded by a title. This title can be disabled by setting disableShortcutsTitle=true. However, if you want to keep the title but change its value, it can be overriden by changing your local i18n translation string configuration.\nFor example, in your local i18n/en.toml file, add the following content\n[Shortcuts-Title] other = \"\u003cYour value\u003e\" Read more about hugo menu and hugo i18n translation strings\nConfiguration for Multilingual mode When using a multilingual website, you can set different menus for each language. In the config.toml file, prefix your menu configuration by Languages.\u003clanguage-id\u003e.\nExample from the current website:\n[Languages] [Languages.en] title = \"Hugo Relearn Theme\" weight = 1 languageName = \"English\" landingPageURL = \"/\" landingPageName = \"\u003ci class='fas fa-home'\u003e\u003c/i\u003e Home\" [[Languages.en.menu.shortcuts]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub repo\" identifier = \"ds\" url = \"https://github.com/McShelby/hugo-theme-relearn\" weight = 10 [[Languages.en.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-camera'\u003e\u003c/i\u003e Showcases\" url = \"more/showcase/\" weight = 11 [[Languages.en.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation\" identifier = \"hugodoc\" url = \"https://gohugo.io/\" weight = 20 [[Languages.en.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bullhorn'\u003e\u003c/i\u003e Credits\" url = \"more/credits/\" weight = 30 [[Languages.en.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-tags'\u003e\u003c/i\u003e Tags\" url = \"tags/\" weight = 40 [Languages.pir] title = \"Cap'n Hugo Relearrrn Theme\" weight = 1 languageName = \"Arrr! Pirrrates\" landingPageURL = \"/pir/\" landingPageName = \"\u003ci class='fas fa-home'\u003e\u003c/i\u003e Arrr! Home\" [[Languages.pir.menu.shortcuts]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub repo\" identifier = \"ds\" url = \"https://github.com/McShelby/hugo-theme-relearn\" weight = 10 [[Languages.pir.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-camera'\u003e\u003c/i\u003e Showcases\" url = \"more/showcase/\" weight = 11 [[Languages.pir.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bookmark'\u003e\u003c/i\u003e Cap'n Hugo Documentat'n\" identifier = \"hugodoc\" url = \"https://gohugo.io/\" weight = 20 [[Languages.pir.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bullhorn'\u003e\u003c/i\u003e Crrredits\" url = \"more/credits/\" weight = 30 [[Languages.pir.menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-tags'\u003e\u003c/i\u003e Arrr! Tags\" url = \"tags/\" weight = 40 Read more about hugo menu and hugo multilingual menus\n",
    "description": "",
    "tags": null,
    "title": "Menu extra shortcuts",
    "uri": "/hugo-theme-relearn/cont/menushortcuts/"
  },
  {
    "content": "The Relearn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.\nFinding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the Markdown content.\nThe HTML to include the heart icon is:\n\u003ci class=\"fas fa-heart\"\u003e\u003c/i\u003e Including in markdown Paste the \u003ci\u003e HTML into markup and Font Awesome will load the relevant icon.\nBuilt with \u003ci class=\"fas fa-heart\"\u003e\u003c/i\u003e by Relearn and Hugo Which appears as\nBuilt with by Relearn and Hugo\nCustomising icons Font Awesome provides many ways to modify the icon\nChange color (by default the icon will inherit the parent color) Increase or decrease size Rotate Combine with other icons Check the full documentation on web fonts with CSS for more.\n",
    "description": "",
    "tags": null,
    "title": "Icons and logos",
    "uri": "/hugo-theme-relearn/cont/icons/"
  },
  {
    "content": "The Relearn theme is fully compatible with Hugo multilingual mode.\nIt provides:\nTranslation strings for default values (English, Piratized English, Arabic, Simplified Chinese, Traditional Chinesse, Dutch, French, German, Hindi, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Russian, Spanish, Turkish, Vietnamese). Feel free to contribute! Automatic menu generation from multilingual content In-browser language switching Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current English and Piratized English website.\n# English is the default language defaultContentLanguage = \"en\" [Languages] [Languages.en] title = \"Hugo Relearn Theme\" weight = 1 languageName = \"English\" [Languages.pir] title = \"Cap'n Hugo Relearrrn Theme\" weight = 2 languageName = \"Arrr! Pirrrates\" Then, for each new page, append the id of the language to the file.\nSingle file my-page.md is split in two files: in English: my-page.md in Piratized English: my-page.pir.md Single file _index.md is split in two files: in English: _index.md in Piratized English: _index.pir.md Info Be aware that only translated pages are displayed in menu. It’s not replaced with default language content.\nTip Use slug frontmatter parameter to translate urls too.\nSearch In case each page’s content is written in one single language only, the above configuration will already configure the site’s search functionality correctly.\nWarning Although the theme supports a wide variety of supported languages, the site’s search does not. You’ll see error reports in your browsers console log for each unsupported language. Currently unsupported are:\nIndonesian Korean Polish Search with mixed language support In case your page’s content contains text in multiple languages (e.g. you are writing a russian documentation for your english API), you can add those languages to your config.toml to broaden search.\n[params] additionalContentLanguage = [ \"en\" ] As this is an array, you can add multiple additional languages.\nNote Keep in mind that the language code required here, is the base language code. E.g. if you have additonal content in zh-CN, you have to add just zh to this parameter.\nOverwrite translation strings Translations strings are used for common default values used in the theme (Edit button, Search placeholder and so on). Translations are available in English and Piratized English but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u003cidlanguage\u003e.toml and inspire yourself from the theme themes/hugo-theme-relearn/i18n/en.toml\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true ",
    "description": "",
    "tags": null,
    "title": "Multilingual and i18n",
    "uri": "/hugo-theme-relearn/cont/i18n/"
  },
  {
    "content": "The Relearn theme supports one default taxonomy of Hugo: the tag feature.\nConfiguration Just add tags to any page:\n+++ tags = [\"tutorial\", \"theme\"] title = \"Theme tutorial\" weight = 15 +++ Behavior The tags are displayed at the top of the page, in their insertion order.\nEach tag is a link to a Taxonomy page displaying all the articles with the given tag.\nList all the tags In the config.toml file you can add a shortcut to display all the tags\n[[menu.shortcuts]] name = \"\u003ci class='fas fa-tags'\u003e\u003c/i\u003e Tags\" url = \"/tags\" weight = 30 ",
    "description": "",
    "tags": [
      "documentation",
      "tutorial"
    ],
    "title": "Tags",
    "uri": "/hugo-theme-relearn/cont/tags/"
  },
  {
    "content": "This is a demo child page.\nSubpages of this page page 1-1 ",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/"
  },
  {
    "content": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download latest version of Hugo binary for your OS (Windows, Linux, Mac) : it’s that simple.\n",
    "description": "",
    "tags": null,
    "title": "Requirements",
    "uri": "/hugo-theme-relearn/basics/requirements/"
  },
  {
    "content": "The following steps are here to help you initialize your new website. If you don’t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u003cnew_project\u003e Install the theme Install the Relearn theme by following this documentation\nThis theme’s repository is: https://github.com/McShelby/hugo-theme-relearn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo theme = \"hugo-theme-relearn\" # For search functionality [outputs] home = [ \"HTML\", \"RSS\", \"JSON\"] Create your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core concepts behind it. renders as\nThe Relearn theme provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md hugo new basics/second-content/_index.md Feel free to edit those files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve Go to http://localhost:1313\nYou should notice three things:\nYou have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat! Build the website When your site is ready to deploy, run the following command:\nhugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nNote This website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use GitHub pages\n",
    "description": "",
    "tags": null,
    "title": "Installation",
    "uri": "/hugo-theme-relearn/basics/installation/"
  },
  {
    "content": "Global site parameters On top of Hugo global configuration, the Relearn theme lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\n[params] # This controls whether submenus will be expanded (true), or collapsed (false) in the # menu; if no setting is given, the first menu level is set to false, all others to true; # this can be overridden in the pages frontmatter alwaysopen = true # Prefix URL to edit current page. Will display an \"Edit\" button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \"\" # Author of the site, will be used in meta information author = \"\" # Description of the site, will be used in meta information description = \"\" # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Disable search in hidden pages, otherwise they will be shown in search box disableSearchHiddenPages = false # Disables hidden pages from showing up in the sitemap and on Google (et all), otherwise they may be indexed by search engines disableSeoHiddenPages = false # Disables hidden pages from showing up on the tags page although the tag term will be displayed even if all pages are hidden disableTagHiddenPages = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don't handle well this optimization) disableAssetsBusting = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # If set to false, a Home button will appear below the search bar on the menu. # It is redirecting to the landing page of the current language if specified. (Default is \"/\") disableLandingPageButton = true # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Hide breadcrumbs in the header and only show the current page title disableBreadcrumb = true # If set to true, hide table of contents menu in the header of all pages disableToc = false # If set to false, load the MathJax module on every page regardless if a MathJax shortcode is present disableMathJax = false # Specifies the remote location of the MathJax js customMathJaxURL = \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\" # Initialization parameter for MathJax, see MathJax documentation mathJaxInitialize = \"{}\" # If set to false, load the Mermaid module on every page regardless if a Mermaid shortcode or Mermaid codefence is present disableMermaid = false # Specifies the remote location of the Mermaid js customMermaidURL = \"https://unpkg.com/mermaid/dist/mermaid.min.js\" # Initialization parameter for Mermaid, see Mermaid documentation mermaidInitialize = \"{ \\\"theme\\\": \\\"default\\\" }\" # If set to false, load the Swagger module on every page regardless if a Swagger shortcode is present disableSwagger = false # Specifies the remote location of the RapiDoc js customSwaggerURL = \"https://unpkg.com/rapidoc/dist/rapidoc-min.js\" # Initialization parameter for Swagger, see RapiDoc documentation swaggerInitialize = \"{ \\\"theme\\\": \\\"light\\\" }\" # Hide Next and Previous page buttons normally displayed full height beside content disableNextPrev = true # Order sections in menu by \"weight\" or \"title\". Default to \"weight\"; # this can be overridden in the pages frontmatter ordersectionsby = \"weight\" # Change default color scheme with a variant one. Eg. can be \"red\", \"blue\", \"green\" or an array like [ \"blue\", \"green\" ]. themeVariant = \"relearn-light\" # Change the title separator. Default to \"::\". titleSeparator = \"-\" # If set to true, the menu in the sidebar will be displayed in a collapsible tree view. Although the functionality works with old browsers (IE11), the display of the expander icons is limited to modern browsers collapsibleMenu = false # If a single page can contain content in multiple languages, add those here additionalContentLanguage = [ \"en\" ] A word on running your site in a subfolder The theme runs best if your site is installed in the root of your webserver. If your site is served from a subfolder, eg. https://example.com/mysite/, you have to set the following lines to your config.toml\nbaseURL = \"https://example.com/mysite/\" canonifyURLs = true Without canonifyURLs=true URLs in sublemental pages (like sitemap.xml, rss.xml) will be generated falsly while your HTML files will still work. See https://github.com/gohugoio/hugo/issues/5226.\nActivate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [\"HTML\", \"RSS\", \"JSON\"] Relearn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\nHugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\nActivate print support You can activate print support to add the capability to print whole chapters or even the complete site. Just add the PRINT output format to your home, section and page in your config.toml as seen below:\n[outputs] home = [\"HTML\", \"RSS\", \"PRINT\", \"JSON\"] section = [\"HTML\", \"RSS\", \"PRINT\"] page = [\"HTML\", \"RSS\", \"PRINT\"] This will add a little printer icon in the top bar. It will switch the page to print preview when clicked. You can then send this page to the printer by using your browser’s usual print functionality.\nNote The resulting URL will not be configured ugly in terms of Hugo’s URL handling even if you’ve set uglyURLs=true in your config.toml. This is due to the fact that for one mime type only one suffix can be configured.\nNevertheless, if you’re unhappy with the resulting URLs you can manually redefine outputFormats.PRINT in your own config.toml to your liking.\nMathJax The MathJax configuration parameters can also be set on a specific page. In this case, the global parameter would be overwritten by the local one. See Math for additional documentation.\nExample MathJax is globally disabled. By default it won’t be loaded by any page.\nOn page “Physics” you coded some JavaScript for a dynamic formulae. You can set the MathJax parameters locally to load mathJax on this page.\nYou also can disable MathJax for specific pages while globally enabled.\nMermaid The Mermaid configuration parameters can also be set on a specific page. In this case, the global parameter would be overwritten by the local one. See Mermaid for additional documentation.\nExample Mermaid is globally disabled. By default it won’t be loaded by any page.\nOn page “Architecture” you coded some JavaScript to dynamically generate a class diagram. You can set the Mermaid parameters locally to load mermaid on this page.\nYou also can disable Mermaid for specific pages while globally enabled.\nHome Button Configuration If the disableLandingPageButton option is set to false, a Home button will appear on the left menu. It is an alternative for clicking on the logo. To edit the appearance, you will have to configure two parameters for the defined languages:\n[Languages] [Languages.en] ... landingPageName = \"\u003ci class='fas fa-home'\u003e\u003c/i\u003e Home\" ... [Languages.pir] ... landingPageName = \"\u003ci class='fas fa-home'\u003e\u003c/i\u003e Arrr! Homme\" ... If those params are not configured for a specific language, they will get their default values:\nlandingPageName = \"\u003ci class='fas fa-home'\u003e\u003c/i\u003e Home\" The home button is going to look like this:\n",
    "description": "",
    "tags": null,
    "title": "Configuration",
    "uri": "/hugo-theme-relearn/basics/configuration/"
  },
  {
    "content": "This is a demo child page with no description.\nSo its content is used as description.\n",
    "description": "",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 2",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-2/"
  },
  {
    "content": "The Relearn theme has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-relearn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don’t change the code directly. Instead follow this page. You’d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\nheader.html: the header of the page. See output-formats footer.html: the footer of the page. See output-formats body.html: the body of the page. The body may contain of one or many articles. See output-formats article.html: the output for a single article, can contain elements around your content. See output-formats menu.html: left menu. Not meant to be overwritten search.html: search box. Not meant to be overwritten custom-header.html: custom headers in page. Meant to be overwritten when adding CSS imports. Don’t forget to include style HTML tag directive in your file. custom-footer.html: custom footer in page. Meant to be overwritten when adding Javacript. Don’t forget to include javascript HTML tag directive in your file. favicon.html: the favicon heading-pre.html: side-wide configuration to prepend to pages title headings. If you override this, it is your responsiblity to take the page’s headingPre setting into account. heading-post.html: side-wide configuration to append to pages title headings. If you override this, it is your responsiblity to take the page’s headingPost setting into account. logo.html: the logo, on top left hand corner meta.html: HTML meta tags, if you want to change default behavior menu-pre.html: side-wide configuration to prepend to menu items. If you override this, it is your responsiblity to take the page’s menuPre setting into account. menu-post.html: side-wide configuration to append to menu items. If you override this, it is your responsiblity to take the page’s menuPost setting into account. menu-footer.html: footer of the the left menu toc.html: table of contents content.html: the content page itself. This can be overridden if you wan’t to display page’s meta data above or below the content. content-footer: footer below the content, has a default implementation but you can overwrite it if you don’t like it. Change the logo Create a new file in layouts/partials/ named logo.html. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition!\nNote The size of the logo will adapt automatically\nChange the favicon If your favicon is a SVG, PNG or ICO, just drop off your image in your local static/images/ folder and name it favicon.svg, favicon.png or favicon.ico respectivly.\nIf no favicon file is found, the theme will lookup the alternative filename logo in the same location and will repeat the search for the list of supported file types.\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u003clink rel=\"icon\" href=\"/images/favicon.bmp\" type=\"image/bmp\"\u003e Change the colors The Relearn theme lets you choose between some predefined color variants in light or dark mode, but feel free to add one yourself!\nYou can preview the shipped variants by changing them in the variant selector at the bottom of the menu.\nSingle variant Set the themeVariant value with the name of your theme file. That’s it!\n[params] themeVariant = \"relearn-light\" In the above exaple your theme file has to be named theme-relearn-light.css\nMultiple variants You can also set multiple variants. In this case, the first variant is the default choosen on first view and a variant switch will be shown in the menu footer.\n[params] # Change default color scheme with a variant one. themeVariant = [ \"relearn-light\", \"relearn-dark\" ] Tip If you want to switch the syntax highlightning theme together with your color variant, generate a syntax highlighting stylesheet and configure your installation according to Hugo’s documentation, and @import this stylesheet in your color variant stylesheet. For an example, take a look into theme-relearn-light.css and config.toml of the exampleSite.\nRoll your own If you are not happy with the shipped variants you can either copy one of the shipped files, edit them in a text editor and configure the themeVariant parameter in your config.toml or just use the interactive variant generator.\nOutput formats Certain parts of the theme can be changed for support of your own output formats. Eg. if you define a new output format PLAINTEXT in your config.toml, you can add a file layouts/partials/header.plaintext.html to change the way, the page header should look like for that output format.\n",
    "description": "",
    "tags": null,
    "title": "Customization",
    "uri": "/hugo-theme-relearn/basics/customization/"
  },
  {
    "content": "This interactive tool may help you to generate your own color variant stylesheet.\nTo get started, first select a color variant from the variant switch that fits you best as a starting point.\nThe graph is interactive and reflect the current colors. You can click on any of the colored boxes to adjust the respective color. The graph and the page will update accordingly.\nThe arrowed lines reflects how colors are inherited thru different parts of the theme if the descendent isn’t overwritten. If you want to delete a color and let it inherit from its parent, just delete the value from the input field.\nTo better understand this select the neon variant and modify the differnet heading colors. There, colors for the heading h2, h3 and h4 are explicitly set. h5 is not set and inherits its value from h4. h6 is also not set and inherits its value from h5.\nOnce you’ve changed a color, the variant switch will show a “My custom variant” entry and your changes are stored in the browser. You can change pages and even close the browser without losing your changes.\nOnce you are satisfied, you can download the new variants file and install it in your site.\nNote This only works in modern browsers.\nVariant generator Download variant Reset variant Graph Download variant Reset variant ",
    "description": "",
    "tags": null,
    "title": "Stylesheet generator",
    "uri": "/hugo-theme-relearn/basics/generator/"
  },
  {
    "content": " Changelog 5.3.3 (2022-10-09) Fixes [bug] archetypes: fix frontmatter on home.md template #346 5.3.2 (2022-10-08) Fixes [bug] nav: change defunct keyboard shortcuts #344 5.3.1 (2022-10-08) Enhancements [feature] i18n: update spanish translation #343 [feature] theme: option to align images #327 5.3.0 (2022-10-07) Enhancements [feature] expander: improve whitespace between label and content #338 [feature] swagger: improve print version #333 Fixes [bug] print: fix links of subsections #340 [bug] theme: remove W3C validator errors #337 [bug] children: remove unused page parameter from docs #336 [bug] print: remove menu placeholder in Firefox #335 [bug] swagger: fix download button overflow #334 [bug][change] a11y: remove WCAG errors where applicable #307 5.2.4 (2022-10-02) Fixes [bug] theme: remove HTML5 validator errors #329 5.2.3 (2022-09-12) Fixes [bug] print: chapter pages overwrite font-size #328 5.2.2 (2022-08-23) Fixes [bug] print: fix urls for uglyURLs=true #322 5.2.1 (2022-08-05) Enhancements [feature] i18n: improve japanese translation #318 Fixes [bug] nav: prev/next ignores ordersectionby #320 Maintenance [task] task: bump Hugo minimum requirement to 0.95 #319 5.2.0 (2022-08-03) Enhancements [feature][change] menu: expand collapsed menus if search term is found in submenus #312 Fixes [bug] print: switch mermaid and swagger style before print #316 [bug] theme: fix chapter margins on big screens #315 5.1.2 (2022-07-18) Fixes [bug] print: reset mermaid theme to light #313 [bug] mermaid: header is showing up in FF #311 5.1.1 (2022-07-15) Fixes [bug] tags: don’t count tags if page is hidden #310 5.1.0 (2022-07-15) Enhancements [feature][change] print: make print url deterministic #309 [feature] theme: allow overriding partials for output formats #308 5.0.3 (2022-07-07) Fixes [bug] ie11: no styles after rework of archetypes #306 5.0.2 (2022-07-07) Fixes [bug] theme: load CSS if JS is disabled #305 5.0.1 (2022-07-07) Enhancements [feature][breaking] theme: optimize loading of js and css #303 5.0.0 (2022-07-05) Enhancements [feature][change] archetypes: modularize rendering #300 [feature] history: don’t reload page when history gets cleared #299 [feature] menu: replace expander by fontawesome chevrons #296 [feature] theme: align content with topbar icon limits #290 [feature] button: allow for empty href #288 [feature] i18n: make simplified chinese the standard language for the zn code #287 [feature] clipboard: move head styles to stylesheet #286 [feature] math: add mathjax rendering #235 [feature] theme: allow for page heading modification #139 Fixes [bug] favicon: fix URL if site resides in subfolder #302 [bug] code: show copy-to-clipboard marker for blocklevel code #298 [bug] menu: make active expander visible on hover #297 [bug] print: disable arrow navigation #294 [bug] print: add missing page break after index or section #292 [bug] theme: use more space on wide screens #291 [bug] theme: fix size of chapter heading #289 Maintenance [task] chore: update RapiDoc 9.3.3 #301 [task] chore: update Mermaid 9.1.3 #293 4.2.5 (2022-06-23) Fixes [bug] swagger: javascript code does not load in documentation #285 [bug] children: descriptions not working #284 [bug] print: fix empty page for shortcut links #283 4.2.4 (2022-06-23) Fixes [bug] theme: fix url for logo and home button #282 4.2.3 (2022-06-23) Fixes [bug][breaking] include: second parameter is ignored #281 4.2.2 (2022-06-23) No changelog for this release.\n4.2.1 (2022-06-23) No changelog for this release.\n4.2.0 (2022-06-23) Enhancements [feature][change] tabs: don’t change tab selection if panel does not contain item #279 [feature] shortcodes: convert to partials #277 Fixes [bug] swagger: avoid builtin syntax-highlightning #280 [bug] search: fix console message for missing lunr translations #278 [bug] tabs: fix wrapping when having many tabs #272 4.1.1 (2022-06-18) Fixes [bug] notice: fix layout when content starts with heading #275 4.1.0 (2022-06-12) Enhancements [feature] i18n: support multilang content #271 4.0.5 (2022-06-12) Fixes [bug] i18n: vietnamese language with wrong lang code #270 [bug] i18n: fix search for non western languages #269 4.0.4 (2022-06-07) Enhancements [feature] theme: improve keyboard navigation for scrolling #268 Fixes [bug] swagger: adjust font-size for method buttons #267 [bug] menu: hide expander when only hidden subpages #264 [bug] theme: make compatible with Hugo 0.100.0 #263 Maintenance [task] swagger: update rapidoc to 9.3.2 #266 [task] mermaid: update to 9.1.1 #265 4.0.3 (2022-06-05) Enhancements [feature] toc: add scrollbar #262 4.0.2 (2022-06-05) Fixes [bug] theme: let browser scroll page on CTRL+f #242 4.0.1 (2022-06-05) No changelog for this release.\n4.0.0 (2022-06-05) Enhancements [feature] shortcodes: add named parameter if missing #260 [feature][breaking] theme: remove –MAIN-ANCHOR-color from stylesheet #256 [feature] i18n: add italian translation #254 [feature] attachments: support for brand colors #252 [feature] notice: support for brand colors #251 [feature][breaking] config: remove custom_css #248 [feature] theme: use proper file extension for page-meta.go #246 [feature] variant: add support for brand color variables #239 [feature] i18n: add polish translation #237 Fixes [bug] shortcodes: accept boolean parameters if given as string #261 [bug] print: adjust button and tab size #259 [bug] print: show Mermaid if requested in frontmatter #255 [bug] theme: adjust thin scrollbar slider #244 [bug] mobile: fix broken scrollbar #243 [bug] theme: fix display of tooltip for heading anchor #241 3.4.1 (2022-04-03) Fixes [bug] theme: fix IE11 incompatiblities #234 3.4.0 (2022-04-03) Enhancements [feature] i18n: add traditional chinese translation #233 [feature] menu: expand/collapse menu items without navigation #231 [feature] print: add option to print whole chapter #230 [feature][breaking] theme: apply user supplied content footer below content #229 Fixes [bug] theme: scroll to heading on initial load #232 3.3.0 (2022-03-28) Enhancements [feature] theme: add CSS font variables #227 [feature] swagger: add support for oas/swagger documentation #226 Fixes [bug] variant: make variant switch work on slow networks #228 3.2.1 (2022-03-25) Fixes [bug] print: fix minor inconsistencies #225 [bug] print: show more than just the title page #224 [bug] theme: align content scrollbar to the right on big screens #223 3.2.0 (2022-03-19) Enhancements [feature][change] mermaid: support differing themes for color variant switch #219 [feature] mermaid: load javascript on demand #218 Maintenance [task] mermaid: update to 8.14.0 #220 3.1.1 (2022-03-16) Enhancements [feature] i18n: add korean translation #217 3.1.0 (2022-03-15) Enhancements [feature] notice: add icon parameter #212 [feature] mobile: remove breadcrumb ellipsis #211 Fixes [bug] theme: make storage of multiple Hugo sites on same server distinct #214 [bug] variant: switch breadcrumb color in Chrome #213 [bug] mobile: improve behavior of sidebar menu #210 3.0.4 (2022-02-24) Enhancements [feature] theme: improve font loading #201 [feature][change] variant: fix inconsistent color variable naming #200 Fixes [bug] variant: fix occasional fail when resetting generator #208 [bug] docs: don’t move header on logo hover in IE11 #207 [bug] variant: avoid flash of menu header when non default variant is active #206 [bug] theme: fix wrong HTML closing tag order in chapters #205 [bug] theme: adjust breadcrumb and title for empty home page titles #202 3.0.3 (2022-02-23) Enhancements [feature] tags: show tag count in taxonomy list #195 Fixes [bug] theme: remove Hugo build warning if page is not file based #197 [bug] tags: adhere to titleSeparator #196 [bug] theme: hide footer divider and variant selector in IE11 #194 3.0.2 (2022-02-23) Enhancements [feature] tags: sort by name #193 3.0.1 (2022-02-23) Enhancements [feature] children: set containerstyle automatically according to style #192 Fixes [bug] theme: revert fontawsome to version 5 for IE11 compat #191 3.0.0 (2022-02-22) Enhancements [feature] variant: build a variant generator #188 [feature] nav: only show toc if the page has headings #182 [feature][breaking] theme: change default colors to Relearn defaults #181 [feature] variant: add a variant selector #178 [feature][breaking] menu: rework footer UX #177 [feature] theme: support for dark mode #175 [feature] docs: use light syntax highlightning theme #174 [feature] notice: tweak dull colors #173 [feature] theme: rework header UX #151 Fixes [bug] search: remove additional X in filled out search box in IE11 #190 [bug] clipboard: localize tooltips #186 [bug] print: hide sidebar on Mac #183 [bug] menu: fix scrollbar height #180 [bug][change] search: fix color change for icons on hover #176 2.9.6 (2022-02-07) Fixes [bug] menu: remove debug output #171 2.9.5 (2022-02-07) Fixes [bug] menu: let arrow navigation respect ordersectionsby configuration #170 2.9.4 (2022-02-06) Fixes [bug] exampleSite: fix links in official documentation #168 2.9.3 (2022-02-06) Fixes [bug] menu: invalid URL when the shortcut is an internal link #163 2.9.2 (2021-11-26) Enhancements [feature] theme: add theme version info to head #158 Fixes [bug] theme: fix selection of *.ico files as favicons #160 2.9.1 (2021-11-22) Fixes [bug] menu: fix significantly low performance for collecting of meta info #157 2.9.0 (2021-11-19) Fixes [bug][breaking] relref: fix inconsistent behavior #156 [bug] search: make dropdown stick to search field when scrolling #155 [bug] menu: align long text properly #154 [bug] copyToClipBoard: add missing right border for inline code if disableInlineCopyToClipBoard=true #153 [bug] menu: show hidden sibling pages reliably #152 [bug] menu: bring active item in sight for large menus #149 2.8.3 (2021-11-09) Fixes [bug] mermaid: let zoom reset to initial size #145 [bug] mermaid: remove whitespace from big graphs #143 2.8.2 (2021-11-08) Fixes [bug] mermaid: always load javascript to avoid break if code fences are used #142 2.8.1 (2021-11-04) Fixes [bug] search: don’t break JS in multilang setup if search is disabled #140 2.8.0 (2021-11-03) Enhancements [feature] toc: make disableTOC globally available via config.toml #133 [feature] mermaid: only load javascript if necessary #95 [feature][change] theme: switch font #83 [feature] theme: make favicon configurable #2 Fixes [bug] mermaid: assert that window.mermaid is actually mermaid #136 [bug] menu: remove usage of Hugos UniqueID #131 [bug] theme: reduce margin for children shortcode #130 [bug] theme: left-align h3 in chapters #129 [bug] theme: align copy link to clipboard #128 2.7.0 (2021-10-24) Enhancements [feature] notice: support custom titles #124 2.6.0 (2021-10-21) Fixes [bug] theme: generate correct links if theme served from subdirectory #120 2.5.1 (2021-10-12) Fixes [bug] security: fix XSS for malicioius image URLs #117 2.5.0 (2021-10-08) Enhancements [feature][change] syntax highlight: provide default colors for unknown languages #113 Fixes [bug] security: fix XSS for malicioius URLs #114 [bug] menu: write correct local shortcut links #112 2.4.1 (2021-10-07) Fixes [bug] theme: remove runtime styles from print #111 2.4.0 (2021-10-07) Enhancements [feature] lang: add vietnamese translation #109 [feature][change] theme: simplify stylesheet for color variants #107 [feature] hidden pages: remove from RSS feed, JSON, taxonomy etc #102 [feature] theme: announce alternative content in header #101 [feature] menu: frontmatter option to change sort predicate #98 [feature] menu: add default setting for menu expansion #97 [feature] theme: improve print style #93 [feature] theme: improve style #92 Fixes [bug] include: don’t generate additional HTML if file should be displayed “as is” #110 [bug] attachments: fix broken links if multilang config is used #105 [bug] theme: fix sticky header to remove horizontal scrollbar #82 Maintenance [task] chore: update fontawesome #94 2.3.2 (2021-09-20) Fixes [bug] docs: rename history pirate translation #91 2.3.1 (2021-09-20) Fixes [bug] docs: rename english pirate translation to avoid crash on rendering #90 2.3.0 (2021-09-13) Fixes [bug] theme: fix usage of section element #88 Maintenance [task] theme: ensure IE11 compatiblity #89 [task] docs: Arrr! showcase multilang featurrre #87 2.2.0 (2021-09-09) Enhancements [feature] sitemap: hide hidden pages from sitemap and SEO indexing #85 Fixes [bug] theme: fix showVisitedLinks in case Hugo is configured to modify relative URLs #86 Maintenance [task] theme: switch from data-vocabulary to schema #84 2.1.0 (2021-09-07) Enhancements [feature] search: open expand if it contains search term #80 [feature] menu: scroll active item into view #79 [feature] search: disable search in hidden pages #76 [feature] search: improve readablility of index.json #75 [feature] search: increase performance #74 [feature] search: improve search context preview #73 Fixes [bug][change] search: hide non-site content #81 [bug] menu: always hide hidden sub pages #77 2.0.0 (2021-08-28) Enhancements [feature] tabs: enhance styling #65 [feature] theme: improve readability #64 [feature] menu: show hidden pages if accessed directly #60 [feature][change] theme: treat pages without title as hidden #59 [feature] search: show search results if field gains focus #58 [feature] theme: add partial templates for pre/post menu entries #56 [feature] theme: make chapter archetype more readable #55 [feature] children: add parameter for container style #53 [feature] theme: make content a template #50 [feature] menu: control menu expansion with alwaysopen parameter #49 [feature] include: new shortcode to include other files #43 [feature] theme: adjust print styles #35 [feature][change] code highligher: switch to standard hugo highlighter #32 Fixes [bug][change] arrow-nav: default sorting ignores ordersectionsby #63 [bug][change] children: default sorting ignores ordersectionsby #62 [bug][change] arrow-nav: fix broken links on (and below) hidden pages #61 [bug] theme: remove superflous singular taxonomy from taxonomy title #46 [bug][change] theme: missing –MENU-HOME-LINK-HOVER-color in documentation #45 [bug] theme: fix home link when base URL has some path #44 Maintenance [task] docs: include changelog in exampleSite #33 1.2.0 (2021-07-26) Enhancements [feature] theme: adjust copy-to-clipboard #29 [feature] attachments: adjust style between notice boxes and attachments #28 [feature] theme: adjust blockquote contrast #27 [feature] expand: add option to open on page load #25 [feature] expand: rework styling #24 [feature] attachments: sort output #23 [feature] notice: make restyling of notice boxes more robust #20 [feature] notice: fix contrast issues #19 [feature] notice: align box colors to common standards #18 [feature] notice: use distinct icons for notice box type #17 Fixes [bug] attachments: support i18n for attachment size #21 [bug] notice: support i18n for box labels #16 [bug] notice: support multiple blocks in one box #15 Maintenance [task] dependency: upgrade jquery to 3.6.0 #30 1.1.1 (2021-07-04) Maintenance [task] theme: prepare for new hugo theme registration #13 1.1.0 (2021-07-02) Enhancements [feature] mermaid: expose options in config.toml #4 Fixes [bug] mermaid: config option for CDN url not used #12 [bug] mermaid: only highlight text in HTML elements #10 [bug] mermaid: support pan \u0026 zoom for graphs #9 [bug] mermaid: code fences not always rendered #6 [bug] mermaid: search term on load may bomb chart #5 Maintenance [task] mermaid: update to 8.10.2 #7 1.0.1 (2021-07-01) Maintenance [task] Prepare for hugo showcase #3 1.0.0 (2021-07-01) Maintenance [task] Fork project #1 ",
    "description": "",
    "tags": null,
    "title": "History",
    "uri": "/hugo-theme-relearn/basics/history/"
  },
  {
    "content": "This is a demo child page.\nSubpages of this page page 3-1 ",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 3",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-3/"
  },
  {
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.\n",
    "description": "This is a hidden demo child page",
    "tags": [
      "children",
      "hidden"
    ],
    "title": "page 4 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-4/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "1",
    "uri": "/hugo-theme-relearn/tests/chapters/1/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "10",
    "uri": "/hugo-theme-relearn/tests/chapters/10/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "11",
    "uri": "/hugo-theme-relearn/tests/chapters/11.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "12",
    "uri": "/hugo-theme-relearn/tests/chapters/12.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "13",
    "uri": "/hugo-theme-relearn/tests/chapters/13.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "14",
    "uri": "/hugo-theme-relearn/tests/chapters/14.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "15",
    "uri": "/hugo-theme-relearn/tests/chapters/15.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "16",
    "uri": "/hugo-theme-relearn/tests/chapters/16.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "17",
    "uri": "/hugo-theme-relearn/tests/chapters/17.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "18",
    "uri": "/hugo-theme-relearn/tests/chapters/18.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "19",
    "uri": "/hugo-theme-relearn/tests/chapters/19.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "2",
    "uri": "/hugo-theme-relearn/tests/chapters/2/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "20",
    "uri": "/hugo-theme-relearn/tests/chapters/20.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "21",
    "uri": "/hugo-theme-relearn/tests/chapters/21.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "22",
    "uri": "/hugo-theme-relearn/tests/chapters/22.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "23",
    "uri": "/hugo-theme-relearn/tests/chapters/23.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "24",
    "uri": "/hugo-theme-relearn/tests/chapters/24.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "25",
    "uri": "/hugo-theme-relearn/tests/chapters/25.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "26",
    "uri": "/hugo-theme-relearn/tests/chapters/26.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "27",
    "uri": "/hugo-theme-relearn/tests/chapters/27.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "28",
    "uri": "/hugo-theme-relearn/tests/chapters/28.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "29",
    "uri": "/hugo-theme-relearn/tests/chapters/29.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "3",
    "uri": "/hugo-theme-relearn/tests/chapters/3/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "30",
    "uri": "/hugo-theme-relearn/tests/chapters/30.de/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "4",
    "uri": "/hugo-theme-relearn/tests/chapters/4/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "5",
    "uri": "/hugo-theme-relearn/tests/chapters/5/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "6",
    "uri": "/hugo-theme-relearn/tests/chapters/6/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "7",
    "uri": "/hugo-theme-relearn/tests/chapters/7/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "8",
    "uri": "/hugo-theme-relearn/tests/chapters/8/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "9",
    "uri": "/hugo-theme-relearn/tests/chapters/9/"
  },
  {
    "content": "The attachments shortcode displays a list of files attached to a page with adjustable color, title and icon.\nAttachments adivorciarsetoca00cape.pdf (361 KB) BachGavotteShort.mp3 (357 KB) Carroll_AliceAuPaysDesMerveilles.pdf (175 KB) hugo.png (17 KB) hugo.txt (20 B) movieselectricsheep-flock-244-32500-2.mp4 (340 KB) Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nshortcode partial {{% attachments sort=\"asc\" /%}} {{ partial \"shortcodes/attachments.html\" (dict \"context\" . \"sort\" \"asc\" )}} The shortcurt lists files found in a specific folder.\nCurrently, it supports two implementations for pages\nIf your page is a Markdown file, attachements must be placed in a folder named like your page and ending with .files.\ncontent _index.md page.files attachment.pdf page.md If your page is a folder, attachements must be placed in a nested files folder.\ncontent _index.md page index.md files attachment.pdf Be aware that if you use a multilingual website, you will need to have as many folders as languages.\nParameter Name Default Notes style transparent The color scheme used to highlight the box content.\n- by severity: info, note, tip, warning\u003cnd color: primary, secondary\n- by color: blue, green, grey, orange, red\n- by special color: default,t` title see notes Arbitray text for the box title. Depending on the style there may be a default title. Any given value will overwault.\n- for severity styles: the matching title for the severity\n- for all other colors: Attachments\nIf you wa you have to set this parameter to \" \" (a non empty string filled with spaces) icon see notes Font Awesome icon name set to the left of the title. Depending le** there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching iseverity\n- for all other colors: paperclip\nIf you want no icon, you have to set this parameter to \" \" (a non empty d with spaces) sort asc Sorting the output in ascending or descending order. pattern .* A regular expressions, used to filter the attachments by file name. For example:\n- to match a file suffix of ‘jpg’, use .*jpg (not *.jpg)\n- to match file names ending in jpg or png, use .*(jpg|png) Examples Custom Title, List of Attachments Ending in pdf or mp4 {{% attachments title=\"Related files\" pattern=\".*(pdf|mp4)\" /%}} Related files adivorciarsetoca00cape.pdf (361 KB) Carroll_AliceAuPaysDesMerveilles.pdf (175 KB) movieselectricsheep-flock-244-32500-2.mp4 (340 KB) Info Styled Box, Descending Sort Order {{% attachments style=\"info\" sort=\"desc\" /%}} Info movieselectricsheep-flock-244-32500-2.mp4 (340 KB) hugo.txt (20 B) hugo.png (17 KB) Carroll_AliceAuPaysDesMerveilles.pdf (175 KB) BachGavotteShort.mp3 (357 KB) adivorciarsetoca00cape.pdf (361 KB) Style and Icons For further examples for style, title and icon, see the notice shortcode documentation. The parameter are working the same way for both shortcodes, besides having different defaults.\n",
    "description": "List of files attached to a page",
    "tags": null,
    "title": "Attachments",
    "uri": "/hugo-theme-relearn/shortcodes/attachments/"
  },
  {
    "content": "The button shortcode displays a clickable button with adjustable color, title and icon.\nGet Hugo Get Hugo Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nshortcode partial {{% button href=\"https://gohugo.io/\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"warning\" icon=\"dragon\" %}}Get Hugo{{% /button %}} {{ partial \"shortcodes/button.html\" (dict \"context\" . \"href\" \"https://gohugo.io/\" \"content\" \"Get Hugo\" )}} {{ partial \"shortcodes/button.html\" (dict \"context\" . \"href\" \"https://gohugo.io/\" \"style\" \"warning\" \"icon\" \"dragon\" \"content\" \"Get Hugo\" )}} Once the button is clicked, it opens another browser tab for the given URL.\nParameter Name Default Notes href \u003cempty\u003e The destination URL for the button. If this parameter is not set, the button will do nothing but is still displayed as clickable. style transparent The color scheme used to paint the button.\n- by severity: info, note, tip, warning\n- by brand color: primary, secondary\n- by color: blue, green, grey, orange, red\n- by special color: default, transparent icon see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other colors: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) iconposition left Places the icon to the left or right of the title. \u003ccontent\u003e see notes Arbitray text for the button title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other colors: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) Examples Style By Severity {{% button href=\"https://gohugo.io/\" style=\"info\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"note\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"tip\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"warning\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Get Hugo Get Hugo By Brand Colors {{% button href=\"https://gohugo.io/\" style=\"primary\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"secondary\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo By Color {{% button href=\"https://gohugo.io/\" style=\"blue\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"green\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"grey\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"orange\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"red\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Get Hugo Get Hugo Get Hugo By Special Color {{% button href=\"https://gohugo.io/\" style=\"default\" %}}Get Hugo{{% /button %}} {{% button href=\"https://gohugo.io/\" style=\"transparent\" %}}Get Hugo{{% /button %}} Get Hugo Get Hugo Icon To the Left {{% button href=\"https://gohugo.io/\" icon=\"download\" %}}Get Hugo{{% /button %}} Get Hugo To the Right {{% button href=\"https://gohugo.io/\" icon=\"download\" iconposition=\"right\" %}}Get Hugo{{% /button %}} Get Hugo Override for Severity {{% button href=\"https://gohugo.io/\" icon=\"dragon\" style=\"warning\" %}}Get Hugo{{% /button %}} Get Hugo Other Severity Style with all Defaults {{% button href=\"https://gohugo.io/\" style=\"tip\" %}}{{% /button %}} Tip ",
    "description": "Clickable buttons",
    "tags": null,
    "title": "Button",
    "uri": "/hugo-theme-relearn/shortcodes/button/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "Categories",
    "uri": "/hugo-theme-relearn/categories/"
  },
  {
    "content": "Start your success story. Now!\n",
    "description": "",
    "tags": null,
    "title": "Chapters",
    "uri": "/hugo-theme-relearn/tests/chapters/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "children",
    "uri": "/hugo-theme-relearn/tags/children/"
  },
  {
    "content": "The children shortcode lists the child pages of the current page and its descendants .\npage X page 1 page 2 page 3 Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nshortcode partial {{% children sort=\"weight\" %}} {{ partial \"shortcodes/children.html\" (dict \"context\" . \"sort\" \"weight\" )}} Parameter Name Default Notes containerstyle ul Choose the style used to group all children. It could be any HTML tag name. style li Choose the style used to display each descendant. It could be any HTML tag name. showhidden false When true, child pages hidden from the menu will be displayed aswell. description false When true shows a short text under each page in the list. When no description or summary exists for the page, the first 70 words of the content is taken - read more info about summaries on gohugo.io. depth 1 The depth of descendants to display. For example, if the value is 2, the shortcode will display two levels of child pages. To get all descendants, set this value to a high number eg. 999. sort see notes The sort order of the displayed list.\nIf not set it is sorted by the ordersectionsby setting of the site and the pages frontmatter\n- weight: to sort on menu order\n- title: to sort alphabetically on menu label. Examples All Default {{% children %}} page X page 1 page 2 page 3 With Description {{% children description=\"true\" %}} page XThis is a plain page test, and the beginning of a YAML multiline description... page 1This is a demo child page\npage 2This is a demo child page with no description. So its content is used as description.\npage 3This is a demo child page\nInfinte Depth and Hidden Pages {{% children depth=\"999\" showhidden=\"true\" %}} page X page 1 page 1-1 page 1-1-1 (hidden) page 1-1-1-1 page 1-1-1-1-1 (hidden) page 1-1-1-1-1-1 page 1-1-2 page 1-1-2-1 page 1-1-2-2 page 1-1-3 page 2 page 3 page 3-1 page 4 (hidden) Heading Styles for Container and Elements {{% children containerstyle=\"div\" style=\"h2\" depth=\"3\" description=\"true\" %}} page XThis is a plain page test, and the beginning of a YAML multiline description... page 1This is a demo child page\npage 1-1This is a demo child page\npage 1-1-2This is a demo child page\npage 1-1-3This is a demo child page\npage 2This is a demo child page with no description. So its content is used as description.\npage 3This is a demo child page\npage 3-1This is a plain page test nested in a parent\nDivs for Group and Element Styles {{% children containerstyle=\"div\" style=\"div\" depth=\"3\" %}} page X page 1 page 1-1 page 1-1-2 page 1-1-3 page 2 page 3 page 3-1 ",
    "description": "List the child pages of a page",
    "tags": null,
    "title": "Children",
    "uri": "/hugo-theme-relearn/shortcodes/children/"
  },
  {
    "content": "Some testing for different styles used in syntax highlightning and preformatted blocks.\nInline Code This is some very long inline code. Where does it wrap?\nWhat about wrapping short inline code if multiple sections are written side by side?\nWhat about wrapping short inline code if multiple sections are written side/by/side?\nWhat about wrapping long inline code if multiple sections are written side567 by34567 side567?\nWhat about wrapping long inline code if multiple sections are written side567/by34567/side567?\nCan we just use a simple HTML element ?\nBlock Code Code fences without any selected language { \"well\": \"some JSON in codefences in here\" } { \"well\": \"some JSON in HTML elements here\" } { \"well\": \"Code fences with unexisting language\" } Block Preformatted Some preformatted stuff with markdown indention Some preformatted stuff in HTML elements ",
    "description": "Some testing for different styles used in syntax highlightning and preformatted blocks",
    "tags": null,
    "title": "Code",
    "uri": "/hugo-theme-relearn/tests/code/"
  },
  {
    "content": "Contributors Special thanks to everyone who has contributed to this project.\nMany thanks to Mathieu Cornic for his work on porting the Learn theme to Hugo.\nMany thanks to Andy Miller for initially creating the Learn theme for Grav.\nPackages and libraries autoComplete - A lightweight and powerful vanilla JavaScript completion suggester clipboard.js - A modern approach to copy text to clipboard Featherlight - A lightweight jQuery lightbox plugin Font Awesome - The internet’s icon library and toolkit jQuery - The “Write less, do more” JavaScript library jquery-svg-zoom-pan - A jQuery plugin to enable pan and zoom in SVG images Lunr - Enables a great search experience without the need for external, server-side, search services MathJax - Beautiful math and chemical formulae in all browsers Mermaid - Generation of diagram and flowchart from text in a similar manner as markdown Perfect Scrollbar - A minimalistic but perfect custom scrollbar plugin RapiDoc - Create beautiful, customizable, interactive API documentation from OpenAPI Specifications WorkSans - Work Sans is a 9 weight typeface family based loosely on early Grotesques Tooling GitHub - Continuous deployement, testing and hosting of this project’s sources and its documentation gren - A releasenotes generator for GitHub Hugo - The static site generator of your choice ",
    "description": "",
    "tags": null,
    "title": "Credits",
    "uri": "/hugo-theme-relearn/more/credits/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "documentation",
    "uri": "/hugo-theme-relearn/tags/documentation/"
  },
  {
    "content": "The expand shortcode displays an expandable/collapsible section of text.\nExpand me... Thank you! Usage While the examples are using shortcodes with named parameter you are free to use positional aswell or also call this shortcode from your own partials.\nshortcode shortcode (positional) partial {{% expand title=\"Expand me...\" %}}Thank you!{{% /expand %}} {{% expand \"Expand me...\" %}}Thank you!{{% /expand %}} {{ partial \"shortcodes/expand.html\" (dict \"context\" . \"title\" \"Expand me...\" \"content\" \"Thank you!\" )}} Parameter Name Position Default Notes title 1 \"Expand me...\" Arbitray text to appear next to the expand/collapse icon. open 2 false When true the content text will be initially shown as expanded. \u003ccontent\u003e \u003cempty\u003e Arbitray text to be displayed on expand. Examples All Defaults {{% expand %}}Yes, you did it!{{% /expand %}} Expand me... Yes, you did it! Initially Expanded {{% expand title=\"Expand me...\" open=\"true\" %}}No need to press you!{{% /expand %}} Expand me... No need to press you! Arbitrary Text {{% expand title=\"Show me almost endless possibilities\" %}} You can add standard markdown syntax: - multiple paragraphs - bullet point lists - _emphasized_, **bold** and even **_bold emphasized_** text - [links](https://example.com) - etc. ```plaintext ...and even source code ``` \u003e the possiblities are endless (almost - including other shortcodes may or may not work) {{% /expand %}} Show me almost endless possibilities You can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc. ...and even source code the possiblities are endless (almost - including other shortcodes may or may not work)\n",
    "description": "Expandable/collapsible sections of text",
    "tags": null,
    "title": "Expand",
    "uri": "/hugo-theme-relearn/shortcodes/expand/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "hidden",
    "uri": "/hugo-theme-relearn/tags/hidden/"
  },
  {
    "content": "The Relearn theme is a theme for Hugo, a static website generator written in Go. Where Hugo is often used for blogs, this theme is designed with documentation in mind.\nInfo The theme is a fork of the great Learn theme with the aim of fixing long outstanding bugs and adepting to latest Hugo features. As far as possible this theme tries to be a drop-in replacement for the Learn theme.\nMain features Tip See what’s new within the latest update.\nUsable offline, no external dependencies Support for Internet Explorer 11 Responsive design Configurable hidden pages Automatic next/prev buttons to navigate through menu entries Automatic Search Print whole chapters or even the complete site Multilingual mode for English, Arabic, Simplified Chinese, Traditional Chinesse, Dutch, French, German, Hindi, Indonesian, Italian, Japanese, Korean, Polish, Portuguese, Russian, Spanish, Turkish, Vietnamese Unrestricted menu configuration relating to amount of items and level of nesting Font Awesome icons Tagging support Image resizing, shadow… Syntax highlighting Attachments files List child pages Math and chemical formulae using the MathJax library Mermaid diagrams for flowcharts, sequences, gantts, pie, etc. Swagger UI for OpenAPI Specifications Customizable look and feel Predefined (light, dark) and customizable color variants Buttons Tip/Note/Info/Warning boxes Expand Tabs File inclusion Getting support To get support, feel free to open a new discussion topic or issue in the official repository on GitHub.\nBecome a contributor Feel free to update this documentation by just clicking the Edit link displayed on top right of each page. Your changes will be deployed automatically once they were reviewed.\nYou are most welcome to contribute bugfixes or even new features to the source code by making pull requests to the official repository via GitHub. Please visit the contribution guidelines first.\nLicense This theme is licensed under the MIT License.\nCredits This theme would not be possible without the work of many others. See the credits for a detailed list.\n",
    "description": "",
    "tags": null,
    "title": "Hugo Relearn Theme",
    "uri": "/hugo-theme-relearn/"
  },
  {
    "content": "Some testing for different styles of image links.\nMarkdown Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator HTML Relative to page Relative to page up level Static External fully qualified External without scheme External without scheme and scheme separator ",
    "description": "Some testing for different styles of image links",
    "tags": null,
    "title": "Images",
    "uri": "/hugo-theme-relearn/tests/images/"
  },
  {
    "content": "The include shortcode includes other files from your project inside of the current page.\nUsage While the examples are using shortcodes with named parameter you are free to use positional aswell or also call this shortcode from your own partials.\nshortcode shortcode (positional) partial {{% include file=\"shortcodes/INCLUDE_ME.md\" %}} {{% include \"shortcodes/INCLUDE_ME.md\" %}} {{ partial \"shortcodes/include .html\" (dict \"context\" . \"file\" \"shortcodes/INCLUDE_ME.md\" )}} The included files can even contain Markdown and will be taken into account when generating the table of contents.\nParameter Name Position Default Notes file 1 \u003cempty\u003e The path to the file to be included. Path resolution adheres to Hugo’s build-in readFile function hidefirstheading 2 false When true and the included file contains headings, the first heading will be hidden. This comes in handy, eg. if you include otherwise standalone Markdown files. Examples Arbitray Content {{% include \"shortcodes/INCLUDE_ME.md\" %}} You can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc. ...and even source code the possiblities are endless (almost - including other shortcodes may or may not work) (almost - including other shortcodes may or may not work)\n",
    "description": "Displays content from other files",
    "tags": null,
    "title": "Include",
    "uri": "/hugo-theme-relearn/shortcodes/include/"
  },
  {
    "content": "The math shortcode generates beautiful formatted math and chemical formulae using the MathJax library.\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Note This only works in modern browsers.\nUsage While the examples are using shortcodes with named parameter it is recommended to use codefences instead. This is because more and more other software supports Math codefences (eg. GitHub) and so your markdown becomes more portable.\nYou are free to also call this shortcode from your own partials.\nNote To use codefence syntax you have to turn off guessSyntax for the markup.highlight setting (see the configuration section).\ncodefence shortcode partial ```math $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ ``` {{\u003c math \u003e}} $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ {{\u003c /math \u003e}} {{ partial \"shortcodes/math.html\" (dict \"context\" . \"content\" \"$$left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\" )}} Parameter Parameter are only supported when using shortcode or partial syntax. Defaults are used when using codefence syntax.\nName Default Notes align center Allowed values are left, center or right. \u003ccontent\u003e \u003cempty\u003e Your formuale. Configuration MathJax is configured with default settings. You can customize MathJax’s default settings for all of your files thru a JSON object in your config.toml or override these settings per page thru your pages frontmatter.\nThe JSON object of your config.toml / frontmatter is forwarded into MathJax’s configuration object.\nSee MathJax documentation for all allowed settings.\nNote To use codefence syntax you have to turn off guessSyntax for the markup.highlight setting.\nGlobal Configuration File [params] mathJaxInitialize = \"{ \\\"chtml\\\": { \\\"displayAlign\\\": \\\"left\\\" } }\" [markup] [markup.highlight] # if `guessSyntax = true`, there will be no unstyled code even if no language # was given BUT Mermaid and Math codefences will not work anymore! So this is a # mandatory setting for your site if you want to use Math codefences guessSyntax = false Page’s Frontmatter +++ mathJaxInitialize = \"{ \\\"chtml\\\": { \\\"displayAlign\\\": \\\"left\\\" } }\" +++ Examples Inline Math Inline math is generated if you use a single `$` as a delimiter around your formulae: {{\u003c math \u003e}}$\\sqrt{3}${{\u003c /math \u003e}} Inline math is generated if you use a single $ as a delimiter around your formulae: $\\sqrt{3}$\nBlocklevel Math with Left Alignment If you delimit your formulae by two consecutive `$$` it generates a new block. {{\u003c math align=\"left\" \u003e}} $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ {{\u003c /math \u003e}} If you delimit your formulae by two consecutive $$ it generates a new block.\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ Codefence You can also use codefences but without further parameter.\n```math $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$ ``` $$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$Chemical Formulae {{\u003c math \u003e}} $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ {{\u003c /math \u003e}} $$\\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-}$$ ",
    "description": "Beautiful math and chemical formulae",
    "tags": null,
    "title": "Math",
    "uri": "/hugo-theme-relearn/shortcodes/math/"
  },
  {
    "content": "The mermaid shortcode generates diagrams and flowcharts from text, in a similar manner as Markdown using the Mermaid library.\ngraph LR; If --\u003e Then Then --\u003e Else Note This only works in modern browsers.\nWarning Due to limitations with Mermaid, it is currently not possible to use Mermaid code fences in an initially collapsed expand shortcode. This is a know issue and can’t be fixed by this theme.\nUsage While the examples are using shortcodes with named parameter it is recommended to use codefences instead. This is because more and more other software supports Mermaid codefences (eg. GitHub) and so your markdown becomes more portable.\nYou are free to also call this shortcode from your own partials.\nNote To use codefence syntax you have to turn off guessSyntax for the markup.highlight setting (see the configuration section).\ncodefence shortcode partial ```mermaid graph LR; If --\u003e Then Then --\u003e Else ``` {{\u003c mermaid \u003e}} graph LR; If --\u003e Then Then --\u003e Else {{\u003c /mermaid \u003e}} {{ partial \"shortcodes/mermaid.html\" (dict \"context\" . \"content\" \"graph LR;\\nIf --\u003e Then\\nThen --\u003e Else\" )}} The generated graphs can be be panned by dragging them and zoomed by using the mousewheel. On mobile devices you can use finger gestures.\nParameter Parameter are only supported when using shortcode or partial syntax. Defaults are used when using codefence syntax.\nName Default Notes align center Allowed values are left, center or right. \u003ccontent\u003e \u003cempty\u003e Your Mermaid graph. Configuration Mermaid is configured with default settings. You can customize Mermaid’s default settings for all of your files thru a JSON object in your config.toml, override these settings per page thru your pages frontmatter or override these setting per diagramm thru diagram directives.\nThe JSON object of your config.toml / frontmatter is forwarded into Mermaid’s mermaid.initialize() function.\nSee Mermaid documentation for all allowed settings.\nThe theme setting can also be set by your used color variant. This will be the sitewide default and can - again - be overridden by your settings in config.toml, frontmatter or diagram directives.\nNote To use codefence syntax you have to turn off guessSyntax for the markup.highlight setting.\nGlobal Configuration File [params] mermaidInitialize = \"{ \\\"theme\\\": \\\"dark\\\" }\" [markup] [markup.highlight] # if `guessSyntax = true`, there will be no unstyled code even if no language # was given BUT Mermaid and Math codefences will not work anymore! So this is a # mandatory setting for your site if you want to use Mermaid codefences guessSyntax = false Page’s Frontmatter +++ mermaidInitialize = \"{ \\\"theme\\\": \\\"dark\\\" }\" +++ Examples Flowchart with Non-Default Mermaid Theme {{\u003c mermaid align=\"left\" \u003e}} %%{init:{\"theme\":\"forest\"}}%% graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{\u003cstrong\u003eDecision\u003c/strong\u003e} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} %%{init:{\"theme\":\"forest\"}}%% graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{\u003cstrong\u003eDecision\u003c/strong\u003e} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence {{\u003c mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! {{\u003c /mermaid \u003e}} sequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts \u003cbr\u003eprevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! GANTT {{\u003c mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to Mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to Mermaid :1d {{\u003c /mermaid \u003e}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to Mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to Mermaid :1d Class {{\u003c mermaid \u003e}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label {{\u003c /mermaid \u003e}} classDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label State Diagram with Codefence Syntax ```mermaid stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u003e closed: Close closed --\u003e locked: Lock locked --\u003e closed: Unlock closed --\u003e open: Open ``` stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u003e closed: Close closed --\u003e locked: Lock locked --\u003e closed: Unlock closed --\u003e open: Open",
    "description": "Generate diagrams and flowcharts from text",
    "tags": null,
    "title": "Mermaid",
    "uri": "/hugo-theme-relearn/shortcodes/mermaid/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "non-hidden",
    "uri": "/hugo-theme-relearn/tags/non-hidden/"
  },
  {
    "content": "The notice shortcode shows various types of disclaimers with adjustable color, title and icon to help you structure your page.\nThere may be pirates It is all about the boxes.\nUsage While the examples are using shortcodes with named parameter you are free to use positional aswell or also call this shortcode from your own partials.\nshortcode shortcode (positional) partial {{% notice style=\"primary\" title=\"There may be pirates\" icon=\"skull-crossbones\" %}} It is all about the boxes. {{% /notice %}} {{% notice primary \"There may be pirates\" \"skull-crossbones\" %}} It is all about the boxes. {{% /notice %}} {{ partial \"shortcodes/notice.html\" (dict \"context\" . \"style\" \"primary\" \"title\" \"There may be pirates\" \"icon\" \"skull-crossbones\" \"content\" \"It is all about the boxes.\" )}} Parameter Name Position Default Notes style 1 default The color scheme used to highlight the box content.\n- by severity: info, note, tip, warning\n- by brand color: primary, secondary\n- by color: blue, green, grey, orange, red\n- by special color: default, transparent title 2 see notes Arbitray text for the box title. Depending on the style there may be a default title. Any given value will overwrite the default.\n- for severity styles: the matching title for the severity\n- for all other colors: \u003cempty\u003e\nIf you want no title for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) icon 3 see notes Font Awesome icon name set to the left of the title. Depending on the style there may be a default icon. Any given value will overwrite the default.\n- for severity styles: a nice matching icon for the severity\n- for all other colors: \u003cempty\u003e\nIf you want no icon for a severity style, you have to set this parameter to \" \" (a non empty string filled with spaces) \u003ccontent\u003e \u003cempty\u003e Arbitray text to be displayed in box. Examples By Severity Info with markup {{% notice style=\"info\" %}} An **information** disclaimer You can add standard markdown syntax: - multiple paragraphs - bullet point lists - _emphasized_, **bold** and even ***bold emphasized*** text - [links](https://example.com) - etc. ```plaintext ...and even source code ``` \u003e the possiblities are endless (almost - including other shortcodes may or may not work) {{% /notice %}} Info An information disclaimer\nYou can add standard markdown syntax:\nmultiple paragraphs bullet point lists emphasized, bold and even bold emphasized text links etc. ...and even source code the possiblities are endless (almost - including other shortcodes may or may not work)\nNote {{% notice style=\"note\" %}} A **notice** disclaimer {{% /notice %}} Note A notice disclaimer\nTip {{% notice style=\"tip\" %}} A **tip** disclaimer Tip A tip disclaimer\nWarning {{% notice style=\"warning\" %}} A **warning** disclaimer {{% /notice %}} Warning A warning disclaimer\nWarning with Non-Default Title and Icon {{% notice style=\"warning\" title=\"Here are dragons\" icon=\"dragon\" %}} A **warning** disclaimer {{% /notice %}} Here are dragons A warning disclaimer\nWarning without a Title and Icon {{% notice style=\"warning\" title=\" \" icon=\" \" %}} A **warning** disclaimer {{% /notice %}} A warning disclaimer\nBy Brand Colors Primary with Title only {{% notice style=\"primary\" title=\"Primary\" %}} A **primary** disclaimer {{% /notice %}} Primary A primary disclaimer\nSecondary with Icon only {{% notice style=\"secondary\" icon=\"stopwatch\" %}} A **secondary** disclaimer {{% /notice %}} A secondary disclaimer\nBy Color Blue without a Title and Icon {{% notice style=\"blue\" %}} A **blue** disclaimer {{% /notice %}} A blue disclaimer\nGreen with Title only {{% notice style=\"green\" title=\"Green\" %}} A **green** disclaimer {{% /notice %}} Green A green disclaimer\nGrey with Icon only {{% notice style=\"grey\" icon=\"bug\" %}} A **grey** disclaimer {{% /notice %}} A grey disclaimer\nOrange with Title and Icon {{% notice style=\"orange\" title=\"Orange\" icon=\"bug\" %}} A **orange** disclaimer {{% /notice %}} Orange A orange disclaimer\nRed {{% notice style=\"red\" %}} A **red** disclaimer {{% /notice %}} A red disclaimer\nBy Special Color Default with Title and Icon {{% notice style=\"default\" title\"Pay Attention to this Note!\" icon=\"skull-crossbones\" %}} Some serious information. {{% /notice %}} Pay Attention to this Note! Some serious information.\nTransparent with Title and Icon {{% notice style=\"transparent\" title\"Pay Attention to this Note!\" icon=\"skull-crossbones\" %}} Some serious information. {{% /notice %}} Pay Attention to this Note! Some serious information.\n",
    "description": "Disclaimers to help you structure your page",
    "tags": null,
    "title": "Notice",
    "uri": "/hugo-theme-relearn/shortcodes/notice/"
  },
  {
    "content": "This is a demo child page with a hidden child. You can still access the hidden child directly or via the search.\nSubpages of this page page 1-1-1 (hidden) page 1-1-2 page 1-1-3 ",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/"
  },
  {
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.\nSubpages of this page page 1-1-1-1 ",
    "description": "This is a hidden demo child page",
    "tags": [
      "children",
      "hidden"
    ],
    "title": "page 1-1-1 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/"
  },
  {
    "content": "This is a non-hidden demo child page of a hidden parent page with a hidden child. You can still access the hidden child directly or via the search.\nSubpages of this page page 1-1-1-1-1 (hidden) ",
    "description": "This is a non-hidden demo child page of a hidden parent page",
    "tags": [
      "children",
      "hidden"
    ],
    "title": "page 1-1-1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/"
  },
  {
    "content": "This is a hidden demo child page. This page and all its children are hidden in the menu, arrow navigation and children shortcode as long as you aren’t viewing this page or its children directly.\nSubpages of this page page 1-1-1-1-1-1 ",
    "description": "This is a hidden demo child page",
    "tags": [
      "children",
      "hidden"
    ],
    "title": "page 1-1-1-1-1 (hidden)",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/"
  },
  {
    "content": "This is a non-hidden demo child page of a hidden parent page.\n",
    "description": "This is a non-hidden demo child page of a hidden parent page",
    "tags": [
      "children",
      "hidden"
    ],
    "title": "page 1-1-1-1-1-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/children-1-1-1-1-1-1/"
  },
  {
    "content": "This is a plain demo child page.\nSubpages of this page page 1-1-2-1 page 1-1-2-2 ",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1-1-2",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-2/"
  },
  {
    "content": "This is a plain demo child page.\n",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1-1-2-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-1/"
  },
  {
    "content": "This is a plain demo child page.\n",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1-1-2-2",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-2/children-1-1-2-2/"
  },
  {
    "content": "This is a plain demo child page.\n",
    "description": "This is a demo child page",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 1-1-3",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-1/children-1-1/children-1-1-3/"
  },
  {
    "content": "This is a plain demo child page.\n",
    "description": "This is a plain page test nested in a parent",
    "tags": [
      "children",
      "non-hidden"
    ],
    "title": "page 3-1",
    "uri": "/hugo-theme-relearn/shortcodes/children/children-3/test3/"
  },
  {
    "content": "GoboLinux Wiki by NEONsys.org BITS by Dr. Lutz Gollan Pamasol Electrics by Pamasol – Swiss Aerosol Solutions ",
    "description": "",
    "tags": null,
    "title": "Showcase",
    "uri": "/hugo-theme-relearn/more/showcase/"
  },
  {
    "content": "The siteparam shortcode prints values of site params.\nUsage While the examples are using shortcodes with named parameter you are free to use positional aswell or call this shortcode from your own partials.\nshortcode shortcode (positional) partial {{% siteparam name=\"editURL\" %}} {{% siteparam \"editURL\" %}} {{ partial \"shortcodes/siteparam.html\" (dict \"context\" . \"name\" \"editURL\" )}} Parameter Name Position Default Notes name 1 \u003cempty\u003e The name of the site param to be displayed. Examples editURL from config.toml `editURL` value: {{% siteparam name=\"editURL\" %}} editURL value: https://github.com/McShelby/hugo-theme-relearn/edit/main/exampleSite/content/\n",
    "description": "Get value of site params",
    "tags": null,
    "title": "Site param",
    "uri": "/hugo-theme-relearn/shortcodes/siteparam/"
  },
  {
    "content": "This shortcode uses the RapiDoc library to display your Swagger / OpenAPI Specifications.\nNote This only works in modern browsers.\nUsage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nshortcode partial {{\u003c swagger src=\"https://petstore3.swagger.io/api/v3/openapi.json\" \u003e}} {{ partial \"shortcodes/swagger.html\" (dict \"context\" . \"src\" \"https://petstore3.swagger.io/api/v3/openapi.json\" )}} Parameter Name Default Notes src \u003cempty\u003e The URL to the OpenAPI Specification file. This can be relative to the URL of your page if it is a leaf or branch bundle. Note If you want to print out (or generate a PDF) from your Swagger documentation, don’t initiate printing directly from the page because the elements are optimized for interactive usage in a browser.\nInstead, open the print preview in your browser and initiate printing from that page. This page is optimized for reading and expands most of the available sections.\nConfiguration Swagger is configured with default settings. You can customize Swagger’s default settings for all of your files thru a JSON object in your config.toml or override these settings per page thru your pages frontmatter.\nThe JSON object of your config.toml / frontmatter is forwarded into Swagger’s initialization. At the moment, only the theme setting is supported.\nThe theme setting can also be set by your used color variant. This will be the sitewide default and can - again - be overridden by your settings in config.toml or frontmatter.\nGlobal Configuration File [params] swaggerInitialize = \"{ \\\"theme\\\": \\\"dark\\\" }\" Example Using Local File {{\u003c swagger src=\"petstore.json\" \u003e}} ",
    "description": "UI for your Swagger / OpenAPI Specifications",
    "tags": null,
    "title": "Swagger",
    "uri": "/hugo-theme-relearn/shortcodes/swagger/"
  },
  {
    "content": "The tabs shortcode displays arbitrary content in unlimited number of tabs. This comes in handy eg. for providing code snippets for multiple languages or providing configuration in different formats.\npython bash print(\"Hello World!\") echo \"Hello World!\" Usage While the examples are using shortcodes with named parameter you are free to also call this shortcode from your own partials.\nshortcode partial {{\u003c tabs \u003e}} {{% tab name=\"python\" %}} ```python print(\"Hello World!\") ``` {{% /tab %}} {{% tab name=\"bash\" %}} ```bash echo \"Hello World!\" ``` {{% /tab %}} {{\u003c /tabs \u003e}} {{ partial \"shortcodes/tabs.html\" (dict \"context\" . \"tabs\" (slice (dict \"name\" \"python\" \"content\" (\"```python\\nprint(\\\"Hello World!\\\")\\n```\" | markdownify) ) (dict \"name\" \"bash\" \"content\" (\"```bash\\necho \\\"Hello World!\\\"\\n```\" | markdownify) ) ) )}} Parameter Name Default Notes groupid default Arbitrary name of the group the tab view belongs to.\nTab views with the same groupid sychronize their selected tab. This sychronization applies to the whole site! \u003ccontent\u003e \u003cempty\u003e Arbitrary number of tabs defined with the tab sub-shortcode. Note When using tab views with different content sets, make sure to use a common groupid for equal sets of tabs but distinct groupid for different sets.\nThe tab selection is restored automatically based on the groupid and if it cannot find a tab item because it came from the 'default' group on a different page then the first tab is selected instead.\nExamples Distinct groupid {{\u003c tabs groupid=\"config\" \u003e}} {{% tab name=\"json\" %}} ```json { \"Hello\": \"World\" } ``` {{% /tab %}} {{% tab name=\"XML\" %}} ```xml \u003cHello\u003eWorld\u003c/Hello\u003e ``` {{% /tab %}} {{% tab name=\"properties\" %}} ```properties Hello = World ``` {{% /tab %}} {{\u003c /tabs \u003e}} json XML properties { \"Hello\": \"World\" } \u003cHello\u003eWorld\u003c/Hello\u003e Hello = World Non-Distinct groupid See what happens to this tab view if you select properties tab from the previous example.\n{{\u003c tabs groupid=\"config\" \u003e}} {{% tab name=\"json\" %}} ```json { \"Hello\": \"World\" } ``` {{% /tab %}} {{% tab name=\"XML\" %}} ```xml \u003cHello\u003eWorld\u003c/Hello\u003e ``` {{% /tab %}} {{\u003c /tabs \u003e}} json XML { \"Hello\": \"World\" } \u003cHello\u003eWorld\u003c/Hello\u003e ",
    "description": "Show content in tabbed views",
    "tags": null,
    "title": "Tabbed views",
    "uri": "/hugo-theme-relearn/shortcodes/tabs/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "Tags",
    "uri": "/hugo-theme-relearn/tags/"
  },
  {
    "content": "Placeholder…\n",
    "description": "",
    "tags": null,
    "title": "The one and only hidden child",
    "uri": "/hugo-theme-relearn/tests/chapters/children-1/"
  },
  {
    "content": "",
    "description": "",
    "tags": null,
    "title": "tutorial",
    "uri": "/hugo-theme-relearn/tags/tutorial/"
  },
  {
    "content": " Make a visible block\nAnd another one\n",
    "description": "Test dynamic width resizing of content if scrollbar is present",
    "tags": null,
    "title": "Width",
    "uri": "/hugo-theme-relearn/tests/width/"
  }
]
